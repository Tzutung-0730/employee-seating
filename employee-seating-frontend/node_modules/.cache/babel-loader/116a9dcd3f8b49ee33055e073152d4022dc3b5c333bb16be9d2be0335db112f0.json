{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"employee-container\"\n};\nconst _hoisted_2 = {\n  class: \"employee-table\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_6 = {\n  class: \"modal-content\"\n};\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = {\n  class: \"button-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"h1\", null, \"員工資料管理\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"請輸入員編或姓名\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.showAddEmployeeDialog && $options.showAddEmployeeDialog(...args)),\n    class: \"btn add-btn\"\n  }, _cache[8] || (_cache[8] = [_createElementVNode(\"i\", {\n    class: \"pi pi-plus\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" 新增員工 \")])), _createElementVNode(\"table\", _hoisted_2, [_cache[11] || (_cache[11] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"員編\"), _createElementVNode(\"th\", null, \"姓名\"), _createElementVNode(\"th\", null, \"Email\"), _createElementVNode(\"th\", null, \"座位\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredEmployees, employee => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: employee.empId\n    }, [_createElementVNode(\"td\", null, _toDisplayString(employee.empId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.email), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(['seat-btn', employee.floorSeatSeq === 0 ? 'unassigned' : 'assigned'])\n    }, _toDisplayString($options.getSeatInfo(employee.floorSeatSeq)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.showEditEmployeeDialog(employee),\n      class: \"btn edit-btn\"\n    }, [...(_cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n      class: \"pi pi-pencil\"\n    }, null, -1 /* HOISTED */), _createTextVNode(\" 編輯 \")]))], 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteEmployee(employee),\n      class: \"btn delete-btn\"\n    }, [...(_cache[10] || (_cache[10] = [_createElementVNode(\"i\", {\n      class: \"pi pi-trash\"\n    }, null, -1 /* HOISTED */), _createTextVNode(\" 刪除 \")]))], 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 員工新增/編輯視窗 \"), $data.isEmployeeDialogVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", {\n    class: \"close-btn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.closeDialog && $options.closeDialog(...args))\n  }, \"×\"), _createElementVNode(\"h3\", null, _toDisplayString($data.isEdit ? '編輯員工' : '新增員工'), 1 /* TEXT */), _createCommentVNode(\" 員編 (不可修改) \"), _cache[12] || (_cache[12] = _createElementVNode(\"label\", null, \"員編:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.employeeForm.empId = $event),\n    disabled: $data.isEdit,\n    placeholder: \"員編\"\n  }, null, 8 /* PROPS */, _hoisted_7), [[_vModelText, $data.employeeForm.empId]]), _cache[13] || (_cache[13] = _createElementVNode(\"label\", null, \"姓名:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.employeeForm.name = $event),\n    placeholder: \"姓名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.employeeForm.name]]), _cache[14] || (_cache[14] = _createElementVNode(\"label\", null, \"Email:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.employeeForm.email = $event),\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.employeeForm.email]]), _createCommentVNode(\" 座位 (顯示樓層和座位號) \"), _cache[15] || (_cache[15] = _createElementVNode(\"label\", null, \"座位:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"text\",\n    value: $options.getSeatInfo($data.employeeForm.floorSeatSeq),\n    disabled: \"\"\n  }, null, 8 /* PROPS */, _hoisted_8), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.submitEmployeeForm && $options.submitEmployeeForm(...args)),\n    class: \"btn confirm-btn\"\n  }, \"確認\"), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.closeDialog && $options.closeDialog(...args)),\n    class: \"btn cancel-btn\"\n  }, \"取消\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","type","_cache","$event","$data","searchQuery","placeholder","onClick","args","$options","showAddEmployeeDialog","_createTextVNode","_hoisted_2","_Fragment","_renderList","filteredEmployees","employee","empId","_toDisplayString","name","email","_normalizeClass","floorSeatSeq","getSeatInfo","showEditEmployeeDialog","_hoisted_3","deleteEmployee","_hoisted_4","_createCommentVNode","isEmployeeDialogVisible","_hoisted_5","_hoisted_6","closeDialog","isEdit","employeeForm","disabled","_hoisted_7","value","_hoisted_8","_hoisted_9","submitEmployeeForm"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\Employee\\Employee.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-container\">\r\n    <h1>員工資料管理</h1>\r\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"請輸入員編或姓名\" class=\"search-input\" />\r\n    <button @click=\"showAddEmployeeDialog\" class=\"btn add-btn\">\r\n      <i class=\"pi pi-plus\"></i> 新增員工\r\n    </button>\r\n    <table class=\"employee-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>員編</th>\r\n          <th>姓名</th>\r\n          <th>Email</th>\r\n          <th>座位</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"employee in filteredEmployees\" :key=\"employee.empId\">\r\n          <td>{{ employee.empId }}</td>\r\n          <td>{{ employee.name }}</td>\r\n          <td>{{ employee.email }}</td>\r\n          <td>\r\n            <button :class=\"['seat-btn', employee.floorSeatSeq === 0 ? 'unassigned' : 'assigned']\">\r\n              {{ getSeatInfo(employee.floorSeatSeq) }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button @click=\"showEditEmployeeDialog(employee)\" class=\"btn edit-btn\">\r\n              <i class=\"pi pi-pencil\"></i> 編輯\r\n            </button>\r\n            <button @click=\"deleteEmployee(employee)\" class=\"btn delete-btn\">\r\n              <i class=\"pi pi-trash\"></i> 刪除\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- 員工新增/編輯視窗 -->\r\n    <div v-if=\"isEmployeeDialogVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close-btn\" @click=\"closeDialog\">&times;</span>\r\n        <h3>{{ isEdit ? '編輯員工' : '新增員工' }}</h3>\r\n\r\n        <!-- 員編 (不可修改) -->\r\n        <label>員編:</label>\r\n        <input type=\"text\" v-model=\"employeeForm.empId\" :disabled=\"isEdit\" placeholder=\"員編\" />\r\n\r\n        <label>姓名:</label>\r\n        <input type=\"text\" v-model=\"employeeForm.name\" placeholder=\"姓名\" />\r\n\r\n        <label>Email:</label>\r\n        <input type=\"email\" v-model=\"employeeForm.email\" placeholder=\"Email\" />\r\n\r\n        <!-- 座位 (顯示樓層和座位號) -->\r\n        <label>座位:</label>\r\n        <input type=\"text\" :value=\"getSeatInfo(employeeForm.floorSeatSeq)\" disabled />\r\n\r\n        <div class=\"button-group\">\r\n          <button @click=\"submitEmployeeForm\" class=\"btn confirm-btn\">確認</button>\r\n          <button @click=\"closeDialog\" class=\"btn cancel-btn\">取消</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './Employee.css';\r\n\r\nexport default {\r\n  name: \"EmployeePage\",\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      employees: [],  // 儲存員工資料\r\n      newEmployee: { empId: '', name: '', email: '', floorSeatSeq: 0 },\r\n      isEmployeeDialogVisible: false, // 控制員工對話框顯示\r\n      isEdit: false, // 判斷是否為編輯模式\r\n      employeeForm: { empId: '', name: '', email: '', floorSeatSeq: 0 }, // 預設座位為 0（未分配座位）\r\n      seatingCharts: [] // 儲存所有座位資料，用來查找對應的座位\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter(emp =>\r\n        emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery)\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    // 載入員工資料\r\n    loadEmployees() {\r\n      this.$apiService\r\n        .get(this.$employees.getAllEmployees)\r\n        .then((res) => {\r\n          this.employees = res;\r\n        })\r\n        .catch(() => {\r\n          console.error(\"無法載入員工資料\");\r\n        });\r\n    },\r\n\r\n    // 載入座位資料\r\n    loadSeatingCharts() {\r\n      this.$apiService\r\n        .get(this.$seatingCharts.getEmployeeSeatAssignments)\r\n        .then((res) => {\r\n          this.seatingCharts = res;\r\n        })\r\n        .catch(() => {\r\n          console.error(\"無法載入座位資料\");\r\n        });\r\n    },\r\n\r\n    // 顯示座位資訊\r\n    getSeatInfo(floorSeatSeq) {\r\n      if (floorSeatSeq === 0) {\r\n        return '未分配座位';\r\n      }\r\n      const seat = this.seatingCharts.find(s => s.floorSeatSeq === floorSeatSeq);\r\n      return seat ? `${seat.floorNo}樓: 座位${seat.seatNo}` : '座位資料無法找到';\r\n    },\r\n\r\n    // 顯示新增員工視窗\r\n    showAddEmployeeDialog() {\r\n      this.isEmployeeDialogVisible = true;\r\n      this.isEdit = false;  // 設為新增模式\r\n      this.employeeForm = { empId: '', name: '', email: '', floorSeatSeq: 0 };  // 重置表單，預設未分配座位\r\n    },\r\n\r\n    // 顯示編輯員工視窗\r\n    showEditEmployeeDialog(employee) {\r\n      this.isEmployeeDialogVisible = true;\r\n      this.isEdit = true;  // 設為編輯模式\r\n      this.employeeForm = { ...employee };\r\n      console.log(\"編輯員工表單\", this.employeeForm);\r\n    },\r\n\r\n    // 提交新增或編輯的員工表單\r\n    submitEmployeeForm() {\r\n      if (this.isEdit) {\r\n        // 編輯員工資料\r\n        const request = {\r\n          empId: this.employeeForm.empId,\r\n          name: this.employeeForm.name,\r\n          email: this.employeeForm.email,\r\n          floorSeatSeq: this.employeeForm.floorSeatSeq, // 要包含 floorSeatSeq\r\n        };\r\n\r\n        this.$apiService\r\n          .put(this.$employees.updateEmployee(this.employeeForm.empId), request)\r\n          .then(() => {\r\n            const index = this.employees.findIndex(emp => emp.empId === this.employeeForm.empId);\r\n            if (index !== -1) {\r\n              this.employees[index] = { ...this.employeeForm };  // 更新資料\r\n            }\r\n            alert(\"員工資料更新成功！\");\r\n            this.closeDialog();\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error updating employee:\", error);\r\n            alert(\"更新員工資料失敗！\");\r\n          });\r\n      } else {\r\n        // 新增員工資料\r\n        const request = {\r\n          empId: this.employeeForm.empId,\r\n          name: this.employeeForm.name,\r\n          email: this.employeeForm.email,\r\n          floorSeatSeq: this.employeeForm.floorSeatSeq, // 要包含 floorSeatSeq\r\n        };\r\n\r\n        this.$apiService\r\n          .post(this.$employees.createEmployee, request)\r\n          .then((res) => {\r\n            this.employees.push(res);  // 新增員工資料\r\n            alert(\"員工新增成功！\");\r\n            this.closeDialog();\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error adding employee:\", error);\r\n            alert(\"新增員工失敗！\");\r\n          });\r\n      }\r\n    },\r\n\r\n    // 關閉對話框\r\n    closeDialog() {\r\n      this.isEmployeeDialogVisible = false;\r\n      this.employeeForm = { empId: '', name: '', email: '', floorSeatSeq: 0 };  // 重置表單\r\n    },\r\n\r\n    // 刪除員工\r\n    deleteEmployee(employee) {\r\n      this.$apiService\r\n        .delete(this.$employees.deleteEmployee(employee.empId))\r\n        .then(() => {\r\n          const index = this.employees.indexOf(employee);\r\n          if (index !== -1) {\r\n            this.employees.splice(index, 1);  // 從列表中移除\r\n          }\r\n          alert(\"員工已刪除！\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting employee:\", error);\r\n          alert(\"刪除員工失敗！\");\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.loadEmployees();  // 頁面加載時調用API來加載員工資料\r\n    this.loadSeatingCharts();  // 同時載入座位資料\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EAMtBA,KAAK,EAAC;AAAgB;mBAPjC;mBAAA;;EAAAC,GAAA;EAwCwCD,KAAK,EAAC;;;EACnCA,KAAK,EAAC;AAAe;mBAzChC;mBAAA;;EA2DaA,KAAK,EAAC;AAAc;;uBA1D/BE,mBAAA,CAgEM,OAhENC,UAgEM,G,4BA/DJC,mBAAA,CAAe,YAAX,QAAM,sB,gBACVA,mBAAA,CAAuF;IAAhFC,IAAI,EAAC,MAAM;IAHtB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGgCC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,WAAW,EAAC,UAAU;IAACV,KAAK,EAAC;iDAA1CQ,KAAA,CAAAC,WAAW,E,GACvCL,mBAAA,CAES;IAFAO,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,qBAAA,IAAAD,QAAA,CAAAC,qBAAA,IAAAF,IAAA,CAAqB;IAAEZ,KAAK,EAAC;gCAC3CI,mBAAA,CAA0B;IAAvBJ,KAAK,EAAC;EAAY,4BAL3Be,gBAAA,CAKgC,QAC5B,E,IACAX,mBAAA,CA8BQ,SA9BRY,UA8BQ,G,4BA7BNZ,mBAAA,CAQQ,gBAPNA,mBAAA,CAMK,aALHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,E,wBAGVA,mBAAA,CAmBQ,iB,kBAlBNF,mBAAA,CAiBKe,SAAA,QAnCbC,WAAA,CAkB+BL,QAAA,CAAAM,iBAAiB,EAA7BC,QAAQ;yBAAnBlB,mBAAA,CAiBK;MAjBsCD,GAAG,EAAEmB,QAAQ,CAACC;QACvDjB,mBAAA,CAA6B,YAAAkB,gBAAA,CAAtBF,QAAQ,CAACC,KAAK,kBACrBjB,mBAAA,CAA4B,YAAAkB,gBAAA,CAArBF,QAAQ,CAACG,IAAI,kBACpBnB,mBAAA,CAA6B,YAAAkB,gBAAA,CAAtBF,QAAQ,CAACI,KAAK,kBACrBpB,mBAAA,CAIK,aAHHA,mBAAA,CAES;MAFAJ,KAAK,EAvB1ByB,eAAA,cAuByCL,QAAQ,CAACM,YAAY;wBAC7Cb,QAAA,CAAAc,WAAW,CAACP,QAAQ,CAACM,YAAY,yB,GAGxCtB,mBAAA,CAOK,aANHA,mBAAA,CAES;MAFAO,OAAK,EAAAJ,MAAA,IAAEM,QAAA,CAAAe,sBAAsB,CAACR,QAAQ;MAAGpB,KAAK,EAAC;uCACtDI,mBAAA,CAA4B;MAAzBJ,KAAK,EAAC;IAAc,4BA7BrCe,gBAAA,CA6B0C,MAC9B,E,oBA9BZc,UAAA,GA+BYzB,mBAAA,CAES;MAFAO,OAAK,EAAAJ,MAAA,IAAEM,QAAA,CAAAiB,cAAc,CAACV,QAAQ;MAAGpB,KAAK,EAAC;yCAC9CI,mBAAA,CAA2B;MAAxBJ,KAAK,EAAC;IAAa,4BAhCpCe,gBAAA,CAgCyC,MAC7B,E,oBAjCZgB,UAAA,E;sCAuCIC,mBAAA,eAAkB,EACPxB,KAAA,CAAAyB,uBAAuB,I,cAAlC/B,mBAAA,CAwBM,OAxBNgC,UAwBM,GAvBJ9B,mBAAA,CAsBM,OAtBN+B,UAsBM,GArBJ/B,mBAAA,CAA2D;IAArDJ,KAAK,EAAC,WAAW;IAAEW,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAuB,WAAA,IAAAvB,QAAA,CAAAuB,WAAA,IAAAxB,IAAA,CAAW;KAAE,GAAO,GACpDR,mBAAA,CAAuC,YAAAkB,gBAAA,CAAhCd,KAAA,CAAA6B,MAAM,oCAEbL,mBAAA,eAAkB,E,4BAClB5B,mBAAA,CAAkB,eAAX,KAAG,sB,gBACVA,mBAAA,CAAsF;IAA/EC,IAAI,EAAC,MAAM;IA/C1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA+CoCC,KAAA,CAAA8B,YAAY,CAACjB,KAAK,GAAAd,MAAA;IAAGgC,QAAQ,EAAE/B,KAAA,CAAA6B,MAAM;IAAE3B,WAAW,EAAC;0BA/CvF8B,UAAA,I,cA+CoChC,KAAA,CAAA8B,YAAY,CAACjB,KAAK,E,+BAE9CjB,mBAAA,CAAkB,eAAX,KAAG,sB,gBACVA,mBAAA,CAAkE;IAA3DC,IAAI,EAAC,MAAM;IAlD1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAkDoCC,KAAA,CAAA8B,YAAY,CAACf,IAAI,GAAAhB,MAAA;IAAEG,WAAW,EAAC;iDAA/BF,KAAA,CAAA8B,YAAY,CAACf,IAAI,E,+BAE7CnB,mBAAA,CAAqB,eAAd,QAAM,sB,gBACbA,mBAAA,CAAuE;IAAhEC,IAAI,EAAC,OAAO;IArD3B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqDqCC,KAAA,CAAA8B,YAAY,CAACd,KAAK,GAAAjB,MAAA;IAAEG,WAAW,EAAC;iDAAhCF,KAAA,CAAA8B,YAAY,CAACd,KAAK,E,GAE/CQ,mBAAA,mBAAsB,E,4BACtB5B,mBAAA,CAAkB,eAAX,KAAG,sBACVA,mBAAA,CAA8E;IAAvEC,IAAI,EAAC,MAAM;IAAEoC,KAAK,EAAE5B,QAAA,CAAAc,WAAW,CAACnB,KAAA,CAAA8B,YAAY,CAACZ,YAAY;IAAGa,QAAQ,EAAR;0BAzD3EG,UAAA,GA2DQtC,mBAAA,CAGM,OAHNuC,UAGM,GAFJvC,mBAAA,CAAuE;IAA9DO,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAA+B,kBAAA,IAAA/B,QAAA,CAAA+B,kBAAA,IAAAhC,IAAA,CAAkB;IAAEZ,KAAK,EAAC;KAAkB,IAAE,GAC9DI,mBAAA,CAA+D;IAAtDO,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAuB,WAAA,IAAAvB,QAAA,CAAAuB,WAAA,IAAAxB,IAAA,CAAW;IAAEZ,KAAK,EAAC;KAAiB,IAAE,E,SA7DhEgC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}