{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport './SeatChart.css';\nexport default {\n  name: \"SeatChartPage\",\n  data() {\n    return {\n      seatingCharts: [],\n      // 座位資料\n      isSeatDialogVisible: false,\n      // 控制顯示新增/編輯視窗\n      seatForm: {\n        floorNo: '',\n        seatNo: '',\n        isOccupied: false\n      },\n      // 表單資料\n      isEdit: false,\n      // 判斷是新增還是編輯\n      currentSeat: null // 當前編輯的座位\n    };\n  },\n  methods: {\n    loadSeatingCharts() {\n      this.$apiService.get(this.$seatingCharts.getEmployeeSeatAssignments) // 呼叫API\n      .then(res => {\n        this.seatingCharts = res;\n      }).catch(error => {\n        console.error(\"Error loading seating charts:\", error);\n      });\n    },\n    showAddSeatDialog() {\n      this.isSeatDialogVisible = true;\n      this.isEdit = false; // 設置為新增模式\n      this.seatForm = {\n        floorNo: '',\n        seatNo: '',\n        isOccupied: false\n      }; // 重置表單\n    },\n    showEditSeatDialog(seat) {\n      this.isSeatDialogVisible = true;\n      this.isEdit = true; // 設置為編輯模式\n      this.currentSeat = seat;\n      this.seatForm = {\n        ...seat\n      }; // 將選中的座位資料載入表單\n    },\n    submitSeatForm() {\n      if (this.isEdit) {\n        this.$apiService.put(this.$seatingCharts.updateSeatingChart(this.currentSeat.floorSeatSeq), this.seatForm).then(() => {\n          const index = this.seatingCharts.findIndex(s => s.floorSeatSeq === this.currentSeat.floorSeatSeq);\n          if (index !== -1) {\n            this.seatingCharts[index] = {\n              ...this.seatForm\n            }; // 更新座位資料\n          }\n          alert(\"座位更新成功！\");\n          this.closeDialog();\n        }).catch(error => {\n          console.error(\"Error updating seat:\", error);\n          alert(\"更新座位失敗！\");\n        });\n      } else {\n        this.$apiService.post(this.$seatingCharts.createSeatingChart, this.seatForm).then(res => {\n          this.seatingCharts.push(res); // 新增的座位資料\n          alert(\"座位新增成功！\");\n          this.closeDialog();\n        }).catch(error => {\n          console.error(\"Error adding seat:\", error);\n          alert(\"新增座位失敗！\");\n        });\n      }\n    },\n    closeDialog() {\n      this.isSeatDialogVisible = false;\n      this.seatForm = {\n        floorNo: '',\n        seatNo: '',\n        isOccupied: false\n      }; // 重置表單\n      this.currentSeat = null;\n    },\n    deleteSeat(seat) {\n      this.$apiService.delete(this.$seatingCharts.deleteSeatingChart(seat.floorSeatSeq)).then(() => {\n        const index = this.seatingCharts.indexOf(seat);\n        if (index !== -1) {\n          this.seatingCharts.splice(index, 1); // 從列表中移除已刪除的座位\n        }\n        alert(\"座位已刪除！\");\n      }).catch(error => {\n        console.error(\"Error deleting seat:\", error);\n        alert(\"刪除座位失敗！\");\n      });\n    }\n  },\n  created() {\n    this.loadSeatingCharts(); // 頁面加載時獲取座位資料\n  }\n};","map":{"version":3,"names":["name","data","seatingCharts","isSeatDialogVisible","seatForm","floorNo","seatNo","isOccupied","isEdit","currentSeat","methods","loadSeatingCharts","$apiService","get","$seatingCharts","getEmployeeSeatAssignments","then","res","catch","error","console","showAddSeatDialog","showEditSeatDialog","seat","submitSeatForm","put","updateSeatingChart","floorSeatSeq","index","findIndex","s","alert","closeDialog","post","createSeatingChart","push","deleteSeat","delete","deleteSeatingChart","indexOf","splice","created"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\SeatChart\\SeatChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"seating-container\">\r\n    <h1>座位資料管理</h1>\r\n    <button @click=\"showAddSeatDialog\" class=\"btn add-btn\">新增座位</button>\r\n    <table class=\"seating-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>樓層</th>\r\n          <th>座位號</th>\r\n          <th>佔用狀態</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"seat in seatingCharts\" :key=\"seat.floorSeatSeq\">\r\n          <td>{{ seat.floorNo }}</td>\r\n          <td>{{ seat.seatNo }}</td>\r\n          <td>{{ seat.isOccupied ? '佔用' : '空閒' }}</td>\r\n          <td>\r\n            <button @click=\"showEditSeatDialog(seat)\" class=\"btn edit-btn\">編輯</button>\r\n            <button @click=\"deleteSeat(seat)\" class=\"btn delete-btn\">刪除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- 共用的新增/編輯座位視窗 -->\r\n    <div v-if=\"isSeatDialogVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close-btn\" @click=\"closeDialog\">&times;</span>\r\n        <h3>{{ isEdit ? '編輯座位' : '新增座位' }}</h3>\r\n\r\n        <div class=\"form-row\">\r\n          <label>樓層:</label>\r\n          <input type=\"number\" v-model=\"seatForm.floorNo\" placeholder=\"輸入樓層\" />\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <label>座位號:</label>\r\n          <input type=\"number\" v-model=\"seatForm.seatNo\" placeholder=\"輸入座位號\" />\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <label>佔用狀態:</label>\r\n          <input type=\"text\" value=\"未占用\" disabled />\r\n        </div>\r\n\r\n        <div class=\"button-group\">\r\n          <button @click=\"submitSeatForm\" class=\"modal-btn confirm-btn\"><i class=\"pi pi-check\"></i>送出</button>\r\n          <button @click=\"closeDialog\" class=\"modal-btn cancel-btn\"><i class=\"pi pi-times\"></i>取消</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './SeatChart.css';\r\n\r\nexport default {\r\n  name: \"SeatChartPage\",\r\n  data() {\r\n    return {\r\n      seatingCharts: [],  // 座位資料\r\n      isSeatDialogVisible: false,  // 控制顯示新增/編輯視窗\r\n      seatForm: { floorNo: '', seatNo: '', isOccupied: false },  // 表單資料\r\n      isEdit: false,  // 判斷是新增還是編輯\r\n      currentSeat: null,  // 當前編輯的座位\r\n    };\r\n  },\r\n  methods: {\r\n    loadSeatingCharts() {\r\n      this.$apiService\r\n        .get(this.$seatingCharts.getEmployeeSeatAssignments)  // 呼叫API\r\n        .then((res) => {\r\n          this.seatingCharts = res;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error loading seating charts:\", error);\r\n        });\r\n    },\r\n\r\n    showAddSeatDialog() {\r\n      this.isSeatDialogVisible = true;\r\n      this.isEdit = false;  // 設置為新增模式\r\n      this.seatForm = { floorNo: '', seatNo: '', isOccupied: false };  // 重置表單\r\n    },\r\n\r\n    showEditSeatDialog(seat) {\r\n      this.isSeatDialogVisible = true;\r\n      this.isEdit = true;  // 設置為編輯模式\r\n      this.currentSeat = seat;\r\n      this.seatForm = { ...seat };  // 將選中的座位資料載入表單\r\n    },\r\n\r\n    submitSeatForm() {\r\n      if (this.isEdit) {\r\n        this.$apiService\r\n          .put(this.$seatingCharts.updateSeatingChart(this.currentSeat.floorSeatSeq), this.seatForm)\r\n          .then(() => {\r\n            const index = this.seatingCharts.findIndex(s => s.floorSeatSeq === this.currentSeat.floorSeatSeq);\r\n            if (index !== -1) {\r\n              this.seatingCharts[index] = { ...this.seatForm };  // 更新座位資料\r\n            }\r\n            alert(\"座位更新成功！\");\r\n            this.closeDialog();\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error updating seat:\", error);\r\n            alert(\"更新座位失敗！\");\r\n          });\r\n      } else {\r\n        this.$apiService\r\n          .post(this.$seatingCharts.createSeatingChart, this.seatForm)\r\n          .then((res) => {\r\n            this.seatingCharts.push(res);  // 新增的座位資料\r\n            alert(\"座位新增成功！\");\r\n            this.closeDialog();\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error adding seat:\", error);\r\n            alert(\"新增座位失敗！\");\r\n          });\r\n      }\r\n    },\r\n\r\n    closeDialog() {\r\n      this.isSeatDialogVisible = false;\r\n      this.seatForm = { floorNo: '', seatNo: '', isOccupied: false };  // 重置表單\r\n      this.currentSeat = null;\r\n    },\r\n\r\n    deleteSeat(seat) {\r\n      this.$apiService\r\n        .delete(this.$seatingCharts.deleteSeatingChart(seat.floorSeatSeq))\r\n        .then(() => {\r\n          const index = this.seatingCharts.indexOf(seat);\r\n          if (index !== -1) {\r\n            this.seatingCharts.splice(index, 1);  // 從列表中移除已刪除的座位\r\n          }\r\n          alert(\"座位已刪除！\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting seat:\", error);\r\n          alert(\"刪除座位失敗！\");\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.loadSeatingCharts();  // 頁面加載時獲取座位資料\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}