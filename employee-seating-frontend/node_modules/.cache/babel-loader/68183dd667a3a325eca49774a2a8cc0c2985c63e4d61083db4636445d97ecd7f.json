{"ast":null,"code":"export const ApiService = {\n  async request(url, method = 'GET', data = null) {\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const options = {\n      method,\n      headers\n    };\n    if (data) {\n      options.body = JSON.stringify(data);\n    }\n    try {\n      const response = await fetch(url, options);\n      const contentType = response.headers.get('Content-Type');\n      let result;\n      if (contentType && contentType.includes('application/json')) {\n        result = await response.json();\n      } else {\n        result = await response.text();\n      }\n      if (!response.ok) {\n        throw {\n          status: response.status,\n          message: result?.message || 'API Error',\n          data: result\n        };\n      }\n      return result;\n    } catch (error) {\n      console.error('APIService Error:', error);\n      throw error;\n    }\n  },\n  get(url) {\n    return this.request(url, 'GET');\n  },\n  post(url, data) {\n    return this.request(url, 'POST', data);\n  },\n  put(url, data) {\n    return this.request(url, 'PUT', data);\n  },\n  delete(url) {\n    return this.request(url, 'DELETE');\n  }\n};\nexport default ApiService;","map":{"version":3,"names":["ApiService","request","url","method","data","headers","options","body","JSON","stringify","response","fetch","contentType","get","result","includes","json","text","ok","status","message","error","console","post","put","delete"],"sources":["C:/Users/user/Tzutung/employee-seating/employee-seating-frontend/src/services/ApiService.js"],"sourcesContent":["export const ApiService = {\r\n  async request(url, method = 'GET', data = null) {\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    const options = {\r\n      method,\r\n      headers,\r\n    };\r\n\r\n    if (data) {\r\n      options.body = JSON.stringify(data);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, options);\r\n      const contentType = response.headers.get('Content-Type');\r\n\r\n      let result;\r\n      if (contentType && contentType.includes('application/json')) {\r\n        result = await response.json();\r\n      } else {\r\n        result = await response.text();\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw {\r\n          status: response.status,\r\n          message: result?.message || 'API Error',\r\n          data: result,\r\n        };\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.error('APIService Error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  get(url) {\r\n    return this.request(url, 'GET');\r\n  },\r\n\r\n  post(url, data) {\r\n    return this.request(url, 'POST', data);\r\n  },\r\n\r\n  put(url, data) {\r\n    return this.request(url, 'PUT', data);\r\n  },\r\n\r\n  delete(url) {\r\n    return this.request(url, 'DELETE');\r\n  },\r\n};\r\n\r\nexport default ApiService;"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG;EACxB,MAAMC,OAAOA,CAACC,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAE;IAC9C,MAAMC,OAAO,GAAG;MACd,cAAc,EAAE;IAClB,CAAC;IAED,MAAMC,OAAO,GAAG;MACdH,MAAM;MACNE;IACF,CAAC;IAED,IAAID,IAAI,EAAE;MACRE,OAAO,CAACC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IACrC;IAEA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAEI,OAAO,CAAC;MAC1C,MAAMM,WAAW,GAAGF,QAAQ,CAACL,OAAO,CAACQ,GAAG,CAAC,cAAc,CAAC;MAExD,IAAIC,MAAM;MACV,IAAIF,WAAW,IAAIA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QAC3DD,MAAM,GAAG,MAAMJ,QAAQ,CAACM,IAAI,CAAC,CAAC;MAChC,CAAC,MAAM;QACLF,MAAM,GAAG,MAAMJ,QAAQ,CAACO,IAAI,CAAC,CAAC;MAChC;MAEA,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM;UACJC,MAAM,EAAET,QAAQ,CAACS,MAAM;UACvBC,OAAO,EAAEN,MAAM,EAAEM,OAAO,IAAI,WAAW;UACvChB,IAAI,EAAEU;QACR,CAAC;MACH;MAEA,OAAOA,MAAM;IACf,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK;IACb;EACF,CAAC;EAEDR,GAAGA,CAACX,GAAG,EAAE;IACP,OAAO,IAAI,CAACD,OAAO,CAACC,GAAG,EAAE,KAAK,CAAC;EACjC,CAAC;EAEDqB,IAAIA,CAACrB,GAAG,EAAEE,IAAI,EAAE;IACd,OAAO,IAAI,CAACH,OAAO,CAACC,GAAG,EAAE,MAAM,EAAEE,IAAI,CAAC;EACxC,CAAC;EAEDoB,GAAGA,CAACtB,GAAG,EAAEE,IAAI,EAAE;IACb,OAAO,IAAI,CAACH,OAAO,CAACC,GAAG,EAAE,KAAK,EAAEE,IAAI,CAAC;EACvC,CAAC;EAEDqB,MAAMA,CAACvB,GAAG,EAAE;IACV,OAAO,IAAI,CAACD,OAAO,CAACC,GAAG,EAAE,QAAQ,CAAC;EACpC;AACF,CAAC;AAED,eAAeF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}