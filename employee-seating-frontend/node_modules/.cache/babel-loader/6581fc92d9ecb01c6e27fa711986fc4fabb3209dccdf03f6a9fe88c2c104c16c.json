{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport './SeatArrangement.css';\nexport default {\n  data() {\n    return {\n      seatingCharts: [],\n      // 儲存所有樓層的座位資料\n      employees: [],\n      // 儲存所有員工資料\n      selectedSeat: null,\n      // 被選中的座位\n      selectedEmployee: {\n        empId: '',\n        name: '',\n        email: ''\n      },\n      // 被選中的員工資料\n      searchQuery: '' // 用於搜尋員工的關鍵字\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      // 根據編號或姓名篩選員工\n      return this.employees.filter(emp => emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery));\n    }\n  },\n  created() {\n    this.loadEmployees();\n    this.loadSeatingCharts();\n  },\n  methods: {\n    loadEmployees() {\n      this.$apiService.get(this.$employees.getAllEmployees).then(res => {\n        this.employees = res;\n      }).catch(() => {\n        // Handle error here\n      });\n    },\n    loadSeatingCharts() {\n      this.$apiService.get(this.$seatingCharts.getEmployeeSeatAssignments).then(res => {\n        this.seatingCharts = res;\n      }).catch(() => {\n        // Handle error here\n      });\n    },\n    // Method to get the class for each seat based on the seat status\n    getSeatClass(seat) {\n      if (seat.isOccupied) {\n        return 'occupied';\n      }\n      if (this.selectedSeat && this.selectedSeat.seatNo === seat.seatNo && this.selectedSeat.floorNo === seat.floorNo) {\n        return 'selected';\n      }\n      return 'available';\n    },\n    // Method to handle seat selection\n    selectSeat(seat) {\n      if (!seat.isOccupied) {\n        this.selectedSeat = seat;\n      }\n    },\n    // Method to update selected employee data when an employee is selected from the dropdown\n    selectEmployee(event) {\n      const empId = event.target.value;\n      const selectedEmp = this.employees.find(emp => emp.empId === empId);\n      if (selectedEmp) {\n        this.selectedEmployee = {\n          empId: selectedEmp.empId,\n          name: selectedEmp.name,\n          email: selectedEmp.email\n        };\n      }\n    },\n    // Method to handle form submission\n    submitArrangement() {\n      if (this.selectedSeat && this.selectedEmployee) {\n        const request = {\n          empId: this.selectedEmployee.empId,\n          name: this.selectedEmployee.name,\n          email: this.selectedEmployee.email,\n          floorSeatSeq: this.selectedSeat.floorSeatSeq // 必須傳遞座位的 floorSeatSeq\n        };\n        this.$apiService.put(this.$employees.updateEmployee(this.selectedEmployee.empId), request).then(res => {\n          alert(\"座位安排更新成功！\");\n          this.loadSeatingCharts();\n          this.selectedSeat = null;\n          this.selectedEmployee = {}; // 重設選擇的員工\n        }).catch(error => {\n          console.error(\"更新失敗:\", error);\n          alert(\"更新失敗：\" + error.message);\n        });\n      } else {\n        alert(\"請選擇員工和座位！\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","seatingCharts","employees","selectedSeat","selectedEmployee","empId","name","email","searchQuery","computed","filteredEmployees","filter","emp","includes","created","loadEmployees","loadSeatingCharts","methods","$apiService","get","$employees","getAllEmployees","then","res","catch","$seatingCharts","getEmployeeSeatAssignments","getSeatClass","seat","isOccupied","seatNo","floorNo","selectSeat","selectEmployee","event","target","value","selectedEmp","find","submitArrangement","request","floorSeatSeq","put","updateEmployee","alert","error","console","message"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\SeatArrangement\\SeatArrangement.vue"],"sourcesContent":["<template>\r\n  <div class=\"seating-arrangement\">\r\n    <h1 class=\"title\">員工座位安排</h1>\r\n\r\n    <div class=\"employee-selection\">\r\n      <label for=\"employeeSelect\">選擇員工：</label>\r\n      <select v-model=\"selectedEmployee.empId\" id=\"employeeSelect\" @change=\"selectEmployee($event)\">\r\n        <option v-for=\"emp in filteredEmployees\" :key=\"emp.empId\" :value=\"emp.empId\">\r\n          {{ emp.name }} (員編: {{ emp.empId }})\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"seats\">\r\n      <div v-for=\"seat in seatingCharts\" :key=\"seat.seatNo\" class=\"seat-container\">\r\n        <button\r\n          :class=\"getSeatClass(seat)\"\r\n          @click=\"selectSeat(seat)\"\r\n        >\r\n          {{ seat.floorNo }} 樓：座位{{ seat.seatNo }} {{ seat.isOccupied ? '[ 員編:' + seat.empId + ' ]' : '' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"submit-btn\">\r\n      <button @click=\"submitArrangement\">送出</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './SeatArrangement.css';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      seatingCharts: [],  // 儲存所有樓層的座位資料\r\n      employees: [],  // 儲存所有員工資料\r\n      selectedSeat: null,  // 被選中的座位\r\n      selectedEmployee: { empId: '', name: '', email: '' },  // 被選中的員工資料\r\n      searchQuery: ''  // 用於搜尋員工的關鍵字\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    filteredEmployees() {\r\n      // 根據編號或姓名篩選員工\r\n      return this.employees.filter(emp => \r\n        emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery)\r\n      );\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.loadEmployees();\r\n    this.loadSeatingCharts();\r\n  },\r\n\r\n  methods: {\r\n    loadEmployees() {\r\n      this.$apiService\r\n        .get(this.$employees.getAllEmployees)\r\n        .then((res) => {\r\n          this.employees = res;\r\n        })\r\n        .catch(() => {\r\n          // Handle error here\r\n        });\r\n    },\r\n\r\n    loadSeatingCharts() {\r\n      this.$apiService\r\n        .get(this.$seatingCharts.getEmployeeSeatAssignments)\r\n        .then((res) => {\r\n          this.seatingCharts = res;\r\n        })\r\n        .catch(() => {\r\n          // Handle error here\r\n        });\r\n    },\r\n\r\n    // Method to get the class for each seat based on the seat status\r\n    getSeatClass(seat) {\r\n      if (seat.isOccupied) {\r\n        return 'occupied';\r\n      }\r\n      if (this.selectedSeat && this.selectedSeat.seatNo === seat.seatNo && this.selectedSeat.floorNo === seat.floorNo) {\r\n        return 'selected';\r\n      }\r\n      return 'available';\r\n    },\r\n\r\n    // Method to handle seat selection\r\n    selectSeat(seat) {\r\n      if (!seat.isOccupied) {\r\n        this.selectedSeat = seat;\r\n      }\r\n    },\r\n\r\n    // Method to update selected employee data when an employee is selected from the dropdown\r\n    selectEmployee(event) {\r\n      const empId = event.target.value;\r\n      const selectedEmp = this.employees.find(emp => emp.empId === empId);\r\n\r\n      if (selectedEmp) {\r\n        this.selectedEmployee = { \r\n          empId: selectedEmp.empId, \r\n          name: selectedEmp.name, \r\n          email: selectedEmp.email \r\n        };\r\n      }\r\n    },\r\n\r\n    // Method to handle form submission\r\n    submitArrangement() {\r\n      if (this.selectedSeat && this.selectedEmployee) {\r\n        const request = {\r\n          empId: this.selectedEmployee.empId,\r\n          name: this.selectedEmployee.name,\r\n          email: this.selectedEmployee.email,\r\n          floorSeatSeq: this.selectedSeat.floorSeatSeq  // 必須傳遞座位的 floorSeatSeq\r\n        };\r\n        \r\n        this.$apiService\r\n          .put(this.$employees.updateEmployee(this.selectedEmployee.empId), request)\r\n          .then((res) => {\r\n            alert(\"座位安排更新成功！\");\r\n            this.loadSeatingCharts();\r\n            this.selectedSeat = null;\r\n            this.selectedEmployee = {};  // 重設選擇的員工\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"更新失敗:\", error);\r\n            alert(\"更新失敗：\" + error.message);\r\n          });\r\n      } else {\r\n        alert(\"請選擇員工和座位！\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}