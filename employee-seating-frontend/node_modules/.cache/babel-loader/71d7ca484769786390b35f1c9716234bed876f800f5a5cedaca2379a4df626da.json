{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport './SeatChart.css';\nexport default {\n  name: \"SeatChartPage\",\n  data() {\n    return {\n      seatingCharts: [],\n      newSeat: {\n        floorNo: 1,\n        seatNo: 1,\n        isOccupied: false\n      }\n    };\n  },\n  methods: {\n    async loadSeatingCharts() {\n      try {\n        const response = await axios.get('http://localhost:8080/seating-charts'); // 假設你的 API 是這個URL\n        this.seatingCharts = response.data;\n      } catch (error) {\n        console.error(\"Error loading seating charts:\", error);\n      }\n    },\n    async addSeat() {\n      try {\n        const response = await axios.post('http://localhost:8080/seating-charts', this.newSeat);\n        this.seatingCharts.push(response.data); // 新增的座位資料\n        this.newSeat = {\n          floorNo: 1,\n          seatNo: 1,\n          isOccupied: false\n        }; // 重置表單\n        alert(\"座位新增成功！\");\n      } catch (error) {\n        console.error(\"Error adding seat:\", error);\n        alert(\"新增座位失敗！\");\n      }\n    },\n    async editSeat(seat) {\n      const updatedSeat = {\n        ...seat,\n        isOccupied: !seat.isOccupied\n      }; // 這裡假設修改座位的佔用狀態\n      try {\n        const response = await axios.put(`http://localhost:8080/seating-charts/${seat.floorSeatSeq}`, updatedSeat);\n        const index = this.seatingCharts.findIndex(s => s.floorSeatSeq === seat.floorSeatSeq);\n        if (index !== -1) {\n          this.seatingCharts[index] = response.data; // 更新座位資料\n        }\n        alert(\"座位更新成功！\");\n      } catch (error) {\n        console.error(\"Error editing seat:\", error);\n        alert(\"更新座位失敗！\");\n      }\n    },\n    async deleteSeat(seat) {\n      try {\n        await axios.delete(`http://localhost:8080/seating-charts/${seat.floorSeatSeq}`);\n        const index = this.seatingCharts.indexOf(seat);\n        if (index !== -1) {\n          this.seatingCharts.splice(index, 1); // 從列表中移除已刪除的座位\n        }\n        alert(\"座位已刪除！\");\n      } catch (error) {\n        console.error(\"Error deleting seat:\", error);\n        alert(\"刪除座位失敗！\");\n      }\n    }\n  },\n  created() {\n    this.loadSeatingCharts(); // 頁面加載時獲取座位資料\n  }\n};","map":{"version":3,"names":["axios","name","data","seatingCharts","newSeat","floorNo","seatNo","isOccupied","methods","loadSeatingCharts","response","get","error","console","addSeat","post","push","alert","editSeat","seat","updatedSeat","put","floorSeatSeq","index","findIndex","s","deleteSeat","delete","indexOf","splice","created"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\SeatChart\\SeatChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"seating-container\">\r\n    <h1>座位資料管理</h1>\r\n    <button @click=\"addSeat\" class=\"btn add-btn\">新增座位</button>\r\n    <table class=\"seating-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>樓層</th>\r\n          <th>座位號</th>\r\n          <th>佔用狀態</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"seat in seatingCharts\" :key=\"seat.floorSeatSeq\">\r\n          <td>{{ seat.floorNo }}</td>\r\n          <td>{{ seat.seatNo }}</td>\r\n          <td>{{ seat.isOccupied ? '佔用' : '空閒' }}</td>\r\n          <td>\r\n            <button @click=\"editSeat(seat)\" class=\"btn edit-btn\">編輯</button>\r\n            <button @click=\"deleteSeat(seat)\" class=\"btn delete-btn\">刪除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport './SeatChart.css';\r\n\r\nexport default {\r\n  name: \"SeatChartPage\",\r\n  data() {\r\n    return {\r\n      seatingCharts: [],\r\n      newSeat: { floorNo: 1, seatNo: 1, isOccupied: false }\r\n    };\r\n  },\r\n  methods: {\r\n    async loadSeatingCharts() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/seating-charts'); // 假設你的 API 是這個URL\r\n        this.seatingCharts = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error loading seating charts:\", error);\r\n      }\r\n    },\r\n\r\n    async addSeat() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/seating-charts', this.newSeat);\r\n        this.seatingCharts.push(response.data);  // 新增的座位資料\r\n        this.newSeat = { floorNo: 1, seatNo: 1, isOccupied: false };  // 重置表單\r\n        alert(\"座位新增成功！\");\r\n      } catch (error) {\r\n        console.error(\"Error adding seat:\", error);\r\n        alert(\"新增座位失敗！\");\r\n      }\r\n    },\r\n\r\n    async editSeat(seat) {\r\n      const updatedSeat = { ...seat, isOccupied: !seat.isOccupied }; // 這裡假設修改座位的佔用狀態\r\n      try {\r\n        const response = await axios.put(`http://localhost:8080/seating-charts/${seat.floorSeatSeq}`, updatedSeat);\r\n        const index = this.seatingCharts.findIndex(s => s.floorSeatSeq === seat.floorSeatSeq);\r\n        if (index !== -1) {\r\n          this.seatingCharts[index] = response.data;  // 更新座位資料\r\n        }\r\n        alert(\"座位更新成功！\");\r\n      } catch (error) {\r\n        console.error(\"Error editing seat:\", error);\r\n        alert(\"更新座位失敗！\");\r\n      }\r\n    },\r\n\r\n    async deleteSeat(seat) {\r\n      try {\r\n        await axios.delete(`http://localhost:8080/seating-charts/${seat.floorSeatSeq}`);\r\n        const index = this.seatingCharts.indexOf(seat);\r\n        if (index !== -1) {\r\n          this.seatingCharts.splice(index, 1);  // 從列表中移除已刪除的座位\r\n        }\r\n        alert(\"座位已刪除！\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting seat:\", error);\r\n        alert(\"刪除座位失敗！\");\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadSeatingCharts();  // 頁面加載時獲取座位資料\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}