{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport axios from 'axios';\nimport './Employee.css';\nexport default {\n  name: \"EmployeePEage\",\n  data() {\n    return {\n      searchQuery: '',\n      employees: [],\n      newEmployee: {\n        empId: '',\n        name: '',\n        email: ''\n      }\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      return this.employees.filter(emp => emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery));\n    }\n  },\n  methods: {\n    async loadEmployees() {\n      try {\n        const response = await axios.get('http://localhost:8080/employees'); // 假設您的API是這個URL\n        this.employees = response.data;\n      } catch (error) {\n        console.error(\"Error loading employees:\", error);\n      }\n    },\n    async addEmployee() {\n      try {\n        const response = await axios.post('http://localhost:8080/employees', this.newEmployee);\n        this.employees.push(response.data);\n        this.newEmployee = {\n          empId: '',\n          name: '',\n          email: ''\n        }; // Reset the form\n        alert(\"員工新增成功！\");\n      } catch (error) {\n        console.error(\"Error adding employee:\", error);\n        alert(\"新增員工失敗！\");\n      }\n    },\n    async editEmployee(employee) {\n      // 打開編輯頁面，這裡示範編輯員工\n      const updatedEmployee = {\n        ...employee,\n        name: 'Updated Name'\n      }; // 假設修改了姓名\n      try {\n        await axios.put(`http://localhost:8080/employees/${employee.empId}`, updatedEmployee);\n        const index = this.employees.findIndex(emp => emp.empId === employee.empId);\n        if (index !== -1) {\n          this.employees[index] = updatedEmployee;\n        }\n        alert(\"員工更新成功！\");\n      } catch (error) {\n        console.error(\"Error editing employee:\", error);\n        alert(\"更新員工失敗！\");\n      }\n    },\n    async deleteEmployee(employee) {\n      try {\n        await axios.delete(`http://localhost:8080/employees/${employee.empId}`);\n        const index = this.employees.indexOf(employee);\n        if (index !== -1) {\n          this.employees.splice(index, 1);\n        }\n        alert(\"員工已刪除！\");\n      } catch (error) {\n        console.error(\"Error deleting employee:\", error);\n        alert(\"刪除員工失敗！\");\n      }\n    }\n  },\n  created() {\n    this.loadEmployees(); // 頁面加載時獲取員工資料\n  }\n};","map":{"version":3,"names":["axios","name","data","searchQuery","employees","newEmployee","empId","email","computed","filteredEmployees","filter","emp","includes","methods","loadEmployees","response","get","error","console","addEmployee","post","push","alert","editEmployee","employee","updatedEmployee","put","index","findIndex","deleteEmployee","delete","indexOf","splice","created"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\Employee\\Employee.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-container\">\r\n    <h1>員工資料管理</h1>\r\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"搜尋員工...\" class=\"search-input\" />\r\n    <button @click=\"addEmployee\" class=\"btn add-btn\">新增員工</button>\r\n    <table class=\"employee-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>員編</th>\r\n          <th>姓名</th>\r\n          <th>Email</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"employee in filteredEmployees\" :key=\"employee.empId\">\r\n          <td>{{ employee.empId }}</td>\r\n          <td>{{ employee.name }}</td>\r\n          <td>{{ employee.email }}</td>\r\n          <td>\r\n            <button @click=\"editEmployee(employee)\" class=\"btn edit-btn\">編輯</button>\r\n            <button @click=\"deleteEmployee(employee)\" class=\"btn delete-btn\">刪除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport './Employee.css';\r\n\r\nexport default {\r\n  name: \"EmployeePEage\",\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      employees: [],\r\n      newEmployee: { empId: '', name: '', email: '' }\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter(emp =>\r\n        emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery)\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    async loadEmployees() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/employees');  // 假設您的API是這個URL\r\n        this.employees = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error loading employees:\", error);\r\n      }\r\n    },\r\n    async addEmployee() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/employees', this.newEmployee);\r\n        this.employees.push(response.data);\r\n        this.newEmployee = { empId: '', name: '', email: '' };  // Reset the form\r\n        alert(\"員工新增成功！\");\r\n      } catch (error) {\r\n        console.error(\"Error adding employee:\", error);\r\n        alert(\"新增員工失敗！\");\r\n      }\r\n    },\r\n    async editEmployee(employee) {\r\n      // 打開編輯頁面，這裡示範編輯員工\r\n      const updatedEmployee = { ...employee, name: 'Updated Name' }; // 假設修改了姓名\r\n      try {\r\n        await axios.put(`http://localhost:8080/employees/${employee.empId}`, updatedEmployee);\r\n        const index = this.employees.findIndex(emp => emp.empId === employee.empId);\r\n        if (index !== -1) {\r\n          this.employees[index] = updatedEmployee;\r\n        }\r\n        alert(\"員工更新成功！\");\r\n      } catch (error) {\r\n        console.error(\"Error editing employee:\", error);\r\n        alert(\"更新員工失敗！\");\r\n      }\r\n    },\r\n    async deleteEmployee(employee) {\r\n      try {\r\n        await axios.delete(`http://localhost:8080/employees/${employee.empId}`);\r\n        const index = this.employees.indexOf(employee);\r\n        if (index !== -1) {\r\n          this.employees.splice(index, 1);\r\n        }\r\n        alert(\"員工已刪除！\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting employee:\", error);\r\n        alert(\"刪除員工失敗！\");\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadEmployees();  // 頁面加載時獲取員工資料\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}