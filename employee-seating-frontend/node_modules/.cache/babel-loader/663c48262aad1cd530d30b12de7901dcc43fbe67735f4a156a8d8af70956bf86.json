{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport './SeatChart.css';\nexport default {\n  name: \"SeatChartPage\",\n  data() {\n    return {\n      seatingCharts: [],\n      // 座位資料\n      searchQuery: '',\n      // 搜尋查詢\n      newSeat: {\n        floorNo: 1,\n        seatNo: 1,\n        isOccupied: false\n      } // 新座位資料\n    };\n  },\n  computed: {\n    // 根據樓層號和座位號篩選座位\n    filteredSeatingCharts() {\n      return this.seatingCharts.filter(seat => seat.floorNo.toString().includes(this.searchQuery) || seat.seatNo.toString().includes(this.searchQuery));\n    }\n  },\n  methods: {\n    // 載入座位資料\n    loadSeatingCharts() {\n      this.$apiService.get(this.$seatingCharts.getEmployeeSeatAssignments) // 呼叫API\n      .then(res => {\n        this.seatingCharts = res;\n      }).catch(error => {\n        console.error(\"Error loading seating charts:\", error);\n      });\n    },\n    // 新增座位\n    addSeat() {\n      this.$apiService.post(this.$seatingCharts.addSeat, this.newSeat) // 使用API新增座位\n      .then(res => {\n        this.seatingCharts.push(res); // 新增座位後推送到列表\n        this.newSeat = {\n          floorNo: 1,\n          seatNo: 1,\n          isOccupied: false\n        }; // 重設表單\n        alert(\"座位新增成功！\");\n      }).catch(error => {\n        console.error(\"Error adding seat:\", error);\n        alert(\"新增座位失敗！\");\n      });\n    },\n    // 編輯座位\n    editSeat(seat) {\n      const updatedSeat = {\n        ...seat,\n        isOccupied: !seat.isOccupied\n      }; // 假設修改座位的佔用狀態\n      this.$apiService.put(this.$seatingCharts.updateSeat(updatedSeat.floorSeatSeq), updatedSeat) // 更新座位資料\n      .then(res => {\n        const index = this.seatingCharts.findIndex(s => s.floorSeatSeq === seat.floorSeatSeq);\n        if (index !== -1) {\n          this.seatingCharts[index] = res; // 更新座位資料\n        }\n        alert(\"座位更新成功！\");\n      }).catch(error => {\n        console.error(\"Error editing seat:\", error);\n        alert(\"更新座位失敗！\");\n      });\n    },\n    // 刪除座位\n    deleteSeat(seat) {\n      this.$apiService.delete(this.$seatingCharts.deleteSeat(seat.floorSeatSeq)) // 刪除座位資料\n      .then(() => {\n        const index = this.seatingCharts.indexOf(seat);\n        if (index !== -1) {\n          this.seatingCharts.splice(index, 1); // 從列表中移除已刪除的座位\n        }\n        alert(\"座位已刪除！\");\n      }).catch(error => {\n        console.error(\"Error deleting seat:\", error);\n        alert(\"刪除座位失敗！\");\n      });\n    }\n  },\n  created() {\n    this.loadSeatingCharts(); // 頁面加載時獲取座位資料\n  }\n};","map":{"version":3,"names":["name","data","seatingCharts","searchQuery","newSeat","floorNo","seatNo","isOccupied","computed","filteredSeatingCharts","filter","seat","toString","includes","methods","loadSeatingCharts","$apiService","get","$seatingCharts","getEmployeeSeatAssignments","then","res","catch","error","console","addSeat","post","push","alert","editSeat","updatedSeat","put","updateSeat","floorSeatSeq","index","findIndex","s","deleteSeat","delete","indexOf","splice","created"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\SeatChart\\SeatChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"seating-container\">\r\n    <h1>座位資料管理</h1>\r\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"搜尋座位...\" class=\"search-input\" />\r\n    <button @click=\"addSeat\" class=\"btn add-btn\">新增座位</button>\r\n    <table class=\"seating-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>樓層</th>\r\n          <th>座位號</th>\r\n          <th>佔用狀態</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"seat in filteredSeatingCharts\" :key=\"seat.floorSeatSeq\">\r\n          <td>{{ seat.floorNo }}</td>\r\n          <td>{{ seat.seatNo }}</td>\r\n          <td>{{ seat.isOccupied ? '佔用' : '空閒' }}</td>\r\n          <td>\r\n            <button @click=\"editSeat(seat)\" class=\"btn edit-btn\">編輯</button>\r\n            <button @click=\"deleteSeat(seat)\" class=\"btn delete-btn\">刪除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './SeatChart.css';\r\n\r\nexport default {\r\n  name: \"SeatChartPage\",\r\n  data() {\r\n    return {\r\n      seatingCharts: [],  // 座位資料\r\n      searchQuery: '',    // 搜尋查詢\r\n      newSeat: { floorNo: 1, seatNo: 1, isOccupied: false }  // 新座位資料\r\n    };\r\n  },\r\n  computed: {\r\n    // 根據樓層號和座位號篩選座位\r\n    filteredSeatingCharts() {\r\n      return this.seatingCharts.filter(seat => \r\n        seat.floorNo.toString().includes(this.searchQuery) || seat.seatNo.toString().includes(this.searchQuery)\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    // 載入座位資料\r\n    loadSeatingCharts() {\r\n      this.$apiService\r\n        .get(this.$seatingCharts.getEmployeeSeatAssignments)  // 呼叫API\r\n        .then((res) => {\r\n          this.seatingCharts = res;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error loading seating charts:\", error);\r\n        });\r\n    },\r\n\r\n    // 新增座位\r\n    addSeat() {\r\n      this.$apiService\r\n        .post(this.$seatingCharts.addSeat, this.newSeat)  // 使用API新增座位\r\n        .then((res) => {\r\n          this.seatingCharts.push(res);  // 新增座位後推送到列表\r\n          this.newSeat = { floorNo: 1, seatNo: 1, isOccupied: false };  // 重設表單\r\n          alert(\"座位新增成功！\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding seat:\", error);\r\n          alert(\"新增座位失敗！\");\r\n        });\r\n    },\r\n\r\n    // 編輯座位\r\n    editSeat(seat) {\r\n      const updatedSeat = { ...seat, isOccupied: !seat.isOccupied };  // 假設修改座位的佔用狀態\r\n      this.$apiService\r\n        .put(this.$seatingCharts.updateSeat(updatedSeat.floorSeatSeq), updatedSeat)  // 更新座位資料\r\n        .then((res) => {\r\n          const index = this.seatingCharts.findIndex(s => s.floorSeatSeq === seat.floorSeatSeq);\r\n          if (index !== -1) {\r\n            this.seatingCharts[index] = res;  // 更新座位資料\r\n          }\r\n          alert(\"座位更新成功！\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error editing seat:\", error);\r\n          alert(\"更新座位失敗！\");\r\n        });\r\n    },\r\n\r\n    // 刪除座位\r\n    deleteSeat(seat) {\r\n      this.$apiService\r\n        .delete(this.$seatingCharts.deleteSeat(seat.floorSeatSeq))  // 刪除座位資料\r\n        .then(() => {\r\n          const index = this.seatingCharts.indexOf(seat);\r\n          if (index !== -1) {\r\n            this.seatingCharts.splice(index, 1);  // 從列表中移除已刪除的座位\r\n          }\r\n          alert(\"座位已刪除！\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting seat:\", error);\r\n          alert(\"刪除座位失敗！\");\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.loadSeatingCharts();  // 頁面加載時獲取座位資料\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}