{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"seating-arrangement\"\n};\nconst _hoisted_2 = {\n  class: \"employee-selection\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"seats\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"submit-btn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"員工座位安排\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"employeeSelect\"\n  }, \"選擇員工：\", -1 /* HOISTED */)), _createCommentVNode(\" 搜尋框 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"搜尋員工 (編號或姓名)\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedEmployee.empId = $event),\n    id: \"employeeSelect\",\n    onChange: _cache[2] || (_cache[2] = $event => $options.selectEmployee($event))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredEmployees, emp => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: emp.empId,\n      value: emp.empId\n    }, _toDisplayString(emp.name) + \" (員編: \" + _toDisplayString(emp.empId) + \") \", 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedEmployee.empId]])]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.seatingCharts, seat => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: seat.seatNo,\n      class: \"seat-container\"\n    }, [_createElementVNode(\"button\", {\n      class: _normalizeClass($options.getSeatClass(seat)),\n      onClick: $event => $options.selectSeat(seat)\n    }, _toDisplayString(seat.floorNo) + \" 樓：座位\" + _toDisplayString(seat.seatNo) + \" \" + _toDisplayString(seat.isOccupied ? '[ 員編:' + seat.empId + ' ]' : ''), 11 /* TEXT, CLASS, PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.submitArrangement && $options.submitArrangement(...args))\n  }, \"送出\"), _createCommentVNode(\" 清除選擇按鈕 \"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.clearSelection && $options.clearSelection(...args)),\n    class: \"clear-btn\"\n  }, \"清除選擇\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","for","_createCommentVNode","_cache","$event","$data","searchQuery","type","placeholder","selectedEmployee","empId","id","onChange","$options","selectEmployee","_Fragment","_renderList","filteredEmployees","emp","key","value","name","_toDisplayString","_hoisted_3","_hoisted_4","seatingCharts","seat","seatNo","_normalizeClass","getSeatClass","onClick","selectSeat","floorNo","isOccupied","_hoisted_5","_hoisted_6","args","submitArrangement","clearSelection"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\SeatArrangement\\SeatArrangement.vue"],"sourcesContent":["<template>\r\n  <div class=\"seating-arrangement\">\r\n    <h1 class=\"title\">員工座位安排</h1>\r\n\r\n    <div class=\"employee-selection\">\r\n      <label for=\"employeeSelect\">選擇員工：</label>\r\n      <!-- 搜尋框 -->\r\n      <input \r\n        v-model=\"searchQuery\" \r\n        type=\"text\" \r\n        placeholder=\"搜尋員工 (編號或姓名)\"\r\n        class=\"search-input\"\r\n      />\r\n      <select v-model=\"selectedEmployee.empId\" id=\"employeeSelect\" @change=\"selectEmployee($event)\">\r\n        <option v-for=\"emp in filteredEmployees\" :key=\"emp.empId\" :value=\"emp.empId\">\r\n          {{ emp.name }} (員編: {{ emp.empId }})\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"seats\">\r\n      <div v-for=\"seat in seatingCharts\" :key=\"seat.seatNo\" class=\"seat-container\">\r\n        <button\r\n          :class=\"getSeatClass(seat)\"\r\n          @click=\"selectSeat(seat)\"\r\n        >\r\n          {{ seat.floorNo }} 樓：座位{{ seat.seatNo }} {{ seat.isOccupied ? '[ 員編:' + seat.empId + ' ]' : '' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"submit-btn\">\r\n      <button @click=\"submitArrangement\">送出</button>\r\n      <!-- 清除選擇按鈕 -->\r\n      <button @click=\"clearSelection\" class=\"clear-btn\">清除選擇</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './SeatArrangement.css';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      seatingCharts: [],  // 儲存所有樓層的座位資料\r\n      employees: [],  // 儲存所有員工資料\r\n      selectedSeat: null,  // 被選中的座位\r\n      selectedEmployee: { empId: '', name: '', email: '' },  // 被選中的員工資料\r\n      searchQuery: ''  // 用於搜尋員工的關鍵字\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    filteredEmployees() {\r\n      // 根據編號或姓名篩選員工\r\n      return this.employees.filter(emp => \r\n        emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery)\r\n      );\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.loadEmployees();\r\n    this.loadSeatingCharts();\r\n  },\r\n\r\n  methods: {\r\n    loadEmployees() {\r\n      this.$apiService\r\n        .get(this.$employees.getAllEmployees)\r\n        .then((res) => {\r\n          this.employees = res;\r\n        })\r\n        .catch(() => {\r\n          // Handle error here\r\n        });\r\n    },\r\n\r\n    loadSeatingCharts() {\r\n      this.$apiService\r\n        .get(this.$seatingCharts.getEmployeeSeatAssignments)\r\n        .then((res) => {\r\n          this.seatingCharts = res;\r\n        })\r\n        .catch(() => {\r\n          // Handle error here\r\n        });\r\n    },\r\n\r\n    // Method to get the class for each seat based on the seat status\r\n    getSeatClass(seat) {\r\n      if (seat.isOccupied) {\r\n        return 'occupied';\r\n      }\r\n      if (this.selectedSeat && this.selectedSeat.seatNo === seat.seatNo && this.selectedSeat.floorNo === seat.floorNo) {\r\n        return 'selected';\r\n      }\r\n      return 'available';\r\n    },\r\n\r\n    // Method to handle seat selection\r\n    selectSeat(seat) {\r\n      if (!seat.isOccupied) {\r\n        this.selectedSeat = seat;\r\n      }\r\n    },\r\n\r\n    // Method to update selected employee data when an employee is selected from the dropdown\r\n    selectEmployee(event) {\r\n      const empId = event.target.value;\r\n      const selectedEmp = this.employees.find(emp => emp.empId === empId);\r\n\r\n      if (selectedEmp) {\r\n        this.selectedEmployee = { \r\n          empId: selectedEmp.empId, \r\n          name: selectedEmp.name, \r\n          email: selectedEmp.email \r\n        };\r\n      }\r\n    },\r\n\r\n    // Method to handle form submission\r\n    submitArrangement() {\r\n      if (this.selectedSeat && this.selectedEmployee) {\r\n        const request = {\r\n          empId: this.selectedEmployee.empId,\r\n          name: this.selectedEmployee.name,\r\n          email: this.selectedEmployee.email,\r\n          floorSeatSeq: this.selectedSeat.floorSeatSeq  // 必須傳遞座位的 floorSeatSeq\r\n        };\r\n        \r\n        this.$apiService\r\n          .put(this.$employees.updateEmployee(this.selectedEmployee.empId), request)\r\n          .then((res) => {\r\n            alert(\"座位安排更新成功！\");\r\n            this.loadSeatingCharts();\r\n            this.selectedSeat = null;\r\n            this.selectedEmployee = {};  // 重設選擇的員工\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"更新失敗:\", error);\r\n            alert(\"更新失敗：\" + error.message);\r\n          });\r\n      } else {\r\n        alert(\"請選擇員工和座位！\");\r\n      }\r\n    },\r\n\r\n    // Method to clear the selection\r\n    clearSelection() {\r\n      this.selectedSeat = null;\r\n      this.selectedEmployee = {};  // 重設選擇的員工\r\n      this.searchQuery = '';  // 清空搜尋框\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAqB;;EAGzBA,KAAK,EAAC;AAAoB;mBAJnC;;EAoBSA,KAAK,EAAC;AAAO;mBApBtB;;EA+BSA,KAAK,EAAC;AAAY;;uBA9BzBC,mBAAA,CAmCM,OAnCNC,UAmCM,G,0BAlCJC,mBAAA,CAA6B;IAAzBH,KAAK,EAAC;EAAO,GAAC,QAAM,sBAExBG,mBAAA,CAcM,OAdNC,UAcM,G,0BAbJD,mBAAA,CAAyC;IAAlCE,GAAG,EAAC;EAAgB,GAAC,OAAK,sBACjCC,mBAAA,SAAY,E,gBACZH,mBAAA,CAKE;IAZR,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQiBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,cAAc;IAC1BZ,KAAK,EAAC;iDAHGS,KAAA,CAAAC,WAAW,E,mBAKtBP,mBAAA,CAIS;IAjBf,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAauBC,KAAA,CAAAI,gBAAgB,CAACC,KAAK,GAAAN,MAAA;IAAEO,EAAE,EAAC,gBAAgB;IAAEC,QAAM,EAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAES,QAAA,CAAAC,cAAc,CAACV,MAAM;yBACzFP,mBAAA,CAESkB,SAAA,QAhBjBC,WAAA,CAc8BH,QAAA,CAAAI,iBAAiB,EAAxBC,GAAG;yBAAlBrB,mBAAA,CAES;MAFiCsB,GAAG,EAAED,GAAG,CAACR,KAAK;MAAGU,KAAK,EAAEF,GAAG,CAACR;wBACjEQ,GAAG,CAACG,IAAI,IAAG,QAAM,GAAAC,gBAAA,CAAGJ,GAAG,CAACR,KAAK,IAAG,IACrC,uBAhBRa,UAAA;2FAauBlB,KAAA,CAAAI,gBAAgB,CAACC,KAAK,E,KAOzCX,mBAAA,CASM,OATNyB,UASM,I,kBARJ3B,mBAAA,CAOMkB,SAAA,QA5BZC,WAAA,CAqB0BX,KAAA,CAAAoB,aAAa,EAArBC,IAAI;yBAAhB7B,mBAAA,CAOM;MAP8BsB,GAAG,EAAEO,IAAI,CAACC,MAAM;MAAE/B,KAAK,EAAC;QAC1DG,mBAAA,CAKS;MAJNH,KAAK,EAvBhBgC,eAAA,CAuBkBf,QAAA,CAAAgB,YAAY,CAACH,IAAI;MACxBI,OAAK,EAAA1B,MAAA,IAAES,QAAA,CAAAkB,UAAU,CAACL,IAAI;wBAEpBA,IAAI,CAACM,OAAO,IAAG,OAAK,GAAAV,gBAAA,CAAGI,IAAI,CAACC,MAAM,IAAG,GAAC,GAAAL,gBAAA,CAAGI,IAAI,CAACO,UAAU,aAAaP,IAAI,CAAChB,KAAK,4CA1B5FwB,UAAA,E;oCA+BInC,mBAAA,CAIM,OAJNoC,UAIM,GAHJpC,mBAAA,CAA8C;IAArC+B,OAAK,EAAA3B,MAAA,QAAAA,MAAA,UAAAiC,IAAA,KAAEvB,QAAA,CAAAwB,iBAAA,IAAAxB,QAAA,CAAAwB,iBAAA,IAAAD,IAAA,CAAiB;KAAE,IAAE,GACrClC,mBAAA,YAAe,EACfH,mBAAA,CAA+D;IAAtD+B,OAAK,EAAA3B,MAAA,QAAAA,MAAA,UAAAiC,IAAA,KAAEvB,QAAA,CAAAyB,cAAA,IAAAzB,QAAA,CAAAyB,cAAA,IAAAF,IAAA,CAAc;IAAExC,KAAK,EAAC;KAAY,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}