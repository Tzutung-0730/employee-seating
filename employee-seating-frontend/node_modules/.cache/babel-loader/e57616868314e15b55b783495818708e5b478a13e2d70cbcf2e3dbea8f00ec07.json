{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"employee-container\"\n};\nconst _hoisted_2 = {\n  class: \"employee-table\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"員工資料管理\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"輸入員編或姓名˙\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addEmployee && $options.addEmployee(...args)),\n    class: \"btn add-btn\"\n  }, _cache[2] || (_cache[2] = [_createElementVNode(\"i\", {\n    class: \"pi pi-plus\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" 新增員工 \")])), _createElementVNode(\"table\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"員編\"), _createElementVNode(\"th\", null, \"姓名\"), _createElementVNode(\"th\", null, \"Email\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredEmployees, employee => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: employee.empId\n    }, [_createElementVNode(\"td\", null, _toDisplayString(employee.empId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.email), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editEmployee(employee),\n      class: \"btn edit-btn\"\n    }, [...(_cache[3] || (_cache[3] = [_createElementVNode(\"i\", {\n      class: \"pi pi-pencil\"\n    }, null, -1 /* HOISTED */), _createTextVNode(\" 編輯 \")]))], 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteEmployee(employee),\n      class: \"btn delete-btn\"\n    }, [...(_cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n      class: \"pi pi-trash\"\n    }, null, -1 /* HOISTED */), _createTextVNode(\" 刪除 \")]))], 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","_cache","$event","$data","searchQuery","placeholder","onClick","args","$options","addEmployee","_createTextVNode","_hoisted_2","_Fragment","_renderList","filteredEmployees","employee","key","empId","_toDisplayString","name","email","editEmployee","_hoisted_3","deleteEmployee","_hoisted_4"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\Employee\\Employee.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-container\">\r\n    <h1>員工資料管理</h1>\r\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"輸入員編或姓名˙\" class=\"search-input\" />\r\n      <button @click=\"addEmployee\" class=\"btn add-btn\">\r\n      <i class=\"pi pi-plus\"></i> 新增員工\r\n    </button>\r\n    <table class=\"employee-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>員編</th>\r\n          <th>姓名</th>\r\n          <th>Email</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"employee in filteredEmployees\" :key=\"employee.empId\">\r\n          <td>{{ employee.empId }}</td>\r\n          <td>{{ employee.name }}</td>\r\n          <td>{{ employee.email }}</td>\r\n          <td>\r\n            <button @click=\"editEmployee(employee)\" class=\"btn edit-btn\">\r\n              <i class=\"pi pi-pencil\"></i> 編輯\r\n            </button>\r\n            <button @click=\"deleteEmployee(employee)\" class=\"btn delete-btn\">\r\n              <i class=\"pi pi-trash\"></i> 刪除\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './Employee.css';\r\n\r\nexport default {\r\n  name: \"EmployeePage\",  \r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      employees: [],  // 儲存員工資料\r\n      newEmployee: { empId: '', name: '', email: '' }\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter(emp =>\r\n        emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery)\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    // 呼叫API獲取員工資料\r\n    loadEmployees() {\r\n      this.$apiService\r\n        .get(this.$employees.getAllEmployees)  // 使用API的方式\r\n        .then((res) => {\r\n          this.employees = res;\r\n          console.log(\"員工資料已載入:\", this.employees);\r\n        })\r\n        .catch(() => {\r\n          // 錯誤處理\r\n          console.error(\"無法載入員工資料\");\r\n        });\r\n    },\r\n    \r\n    // 新增員工\r\n    addEmployee() {\r\n      this.employees.push({ ...this.newEmployee });\r\n      this.newEmployee = { empId: '', name: '', email: '' };\r\n    },\r\n    \r\n    // 編輯員工資料\r\n    editEmployee(employee) {\r\n      alert(`編輯員工: ${employee.name}`);\r\n    },\r\n    \r\n    // 刪除員工資料\r\n    deleteEmployee(employee) {\r\n      const index = this.employees.indexOf(employee);\r\n      if (index !== -1) {\r\n        this.employees.splice(index, 1);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadEmployees();  // 頁面加載時調用API來加載員工資料\r\n  }\r\n};\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EAMtBA,KAAK,EAAC;AAAgB;mBAPjC;mBAAA;;uBACEC,mBAAA,CA+BM,OA/BNC,UA+BM,G,0BA9BJC,mBAAA,CAAe,YAAX,QAAM,sB,gBACVA,mBAAA,CAAuF;IAAhFC,IAAI,EAAC,MAAM;IAHtB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGgCC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,WAAW,EAAC,UAAU;IAACT,KAAK,EAAC;iDAA1CO,KAAA,CAAAC,WAAW,E,GACrCL,mBAAA,CAEO;IAFEO,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEX,KAAK,EAAC;gCACnCG,mBAAA,CAA0B;IAAvBH,KAAK,EAAC;EAAY,4BAL3Bc,gBAAA,CAKgC,QAC5B,E,IACAX,mBAAA,CAwBQ,SAxBRY,UAwBQ,G,0BAvBNZ,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAW,YAAP,IAAE,E,wBAGVA,mBAAA,CAcQ,iB,kBAbNF,mBAAA,CAYKe,SAAA,QA7BbC,WAAA,CAiB+BL,QAAA,CAAAM,iBAAiB,EAA7BC,QAAQ;yBAAnBlB,mBAAA,CAYK;MAZsCmB,GAAG,EAAED,QAAQ,CAACE;QACvDlB,mBAAA,CAA6B,YAAAmB,gBAAA,CAAtBH,QAAQ,CAACE,KAAK,kBACrBlB,mBAAA,CAA4B,YAAAmB,gBAAA,CAArBH,QAAQ,CAACI,IAAI,kBACpBpB,mBAAA,CAA6B,YAAAmB,gBAAA,CAAtBH,QAAQ,CAACK,KAAK,kBACrBrB,mBAAA,CAOK,aANHA,mBAAA,CAES;MAFAO,OAAK,EAAAJ,MAAA,IAAEM,QAAA,CAAAa,YAAY,CAACN,QAAQ;MAAGnB,KAAK,EAAC;uCAC5CG,mBAAA,CAA4B;MAAzBH,KAAK,EAAC;IAAc,4BAvBrCc,gBAAA,CAuB0C,MAC9B,E,oBAxBZY,UAAA,GAyBYvB,mBAAA,CAES;MAFAO,OAAK,EAAAJ,MAAA,IAAEM,QAAA,CAAAe,cAAc,CAACR,QAAQ;MAAGnB,KAAK,EAAC;uCAC9CG,mBAAA,CAA2B;MAAxBH,KAAK,EAAC;IAAa,4BA1BpCc,gBAAA,CA0ByC,MAC7B,E,oBA3BZc,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}