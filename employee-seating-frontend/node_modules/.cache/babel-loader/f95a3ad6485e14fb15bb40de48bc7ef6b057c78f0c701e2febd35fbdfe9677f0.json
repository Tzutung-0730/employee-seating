{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport './Employee.css';\nexport default {\n  name: \"EmployeePage\",\n  data() {\n    return {\n      searchQuery: '',\n      employees: [],\n      newEmployee: {\n        empId: '',\n        name: '',\n        email: '',\n        floorSeatSeq: 0\n      },\n      isEmployeeDialogVisible: false,\n      isEdit: false,\n      employeeForm: {\n        empId: '',\n        name: '',\n        email: '',\n        floorSeatSeq: 0\n      },\n      seatingCharts: []\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      return this.employees.filter(emp => emp.empId && emp.empId.includes(this.searchQuery) || emp.name && emp.name.includes(this.searchQuery));\n    }\n  },\n  methods: {\n    loadEmployees() {\n      this.$apiService.get(this.$employees.getAllEmployees).then(res => {\n        this.employees = res;\n      }).catch(() => {});\n    },\n    loadSeatingCharts() {\n      this.$apiService.get(this.$seatingCharts.getEmployeeSeatAssignments).then(res => {\n        this.seatingCharts = res;\n      }).catch(() => {});\n    },\n    getSeatInfo(floorSeatSeq) {\n      if (floorSeatSeq === 0) {\n        return '未分配座位';\n      }\n      const seat = this.seatingCharts.find(s => s.floorSeatSeq === floorSeatSeq);\n      return seat ? `${seat.floorNo}樓: 座位${seat.seatNo}` : '座位資料無法找到';\n    },\n    showAddEmployeeDialog() {\n      this.isEmployeeDialogVisible = true;\n      this.isEdit = false;\n      this.employeeForm = {\n        empId: '',\n        name: '',\n        email: '',\n        floorSeatSeq: 0\n      };\n    },\n    showEditEmployeeDialog(employee) {\n      this.isEmployeeDialogVisible = true;\n      this.isEdit = true;\n      this.employeeForm = {\n        ...employee\n      };\n    },\n    submitEmployeeForm() {\n      if (this.isEdit) {\n        const request = {\n          empId: this.employeeForm.empId,\n          name: this.employeeForm.name,\n          email: this.employeeForm.email,\n          floorSeatSeq: this.employeeForm.floorSeatSeq\n        };\n        this.$apiService.put(this.$employees.updateEmployee(this.employeeForm.empId), request).then(() => {\n          const index = this.employees.findIndex(emp => emp.empId === this.employeeForm.empId);\n          if (index !== -1) {\n            this.employees[index] = {\n              ...this.employeeForm\n            };\n          }\n          alert(\"員工資料更新成功！\");\n          this.closeDialog();\n        }).catch(() => {\n          alert(\"更新員工資料失敗！\");\n        });\n      } else {\n        const request = {\n          empId: this.employeeForm.empId,\n          name: this.employeeForm.name,\n          email: this.employeeForm.email,\n          floorSeatSeq: null\n        };\n        this.$apiService.post(this.$employees.createEmployee, request).then(res => {\n          this.employees.push(res);\n          alert(\"員工新增成功！\");\n          this.closeDialog();\n        }).catch(() => {\n          alert(\"新增員工失敗！\");\n        });\n      }\n    },\n    closeDialog() {\n      this.isEmployeeDialogVisible = false;\n      this.employeeForm = {\n        empId: '',\n        name: '',\n        email: '',\n        floorSeatSeq: null\n      };\n      this.isEdit = false;\n      this.loadEmployees();\n    },\n    deleteEmployee(employee) {\n      this.$apiService.delete(this.$employees.deleteEmployee(employee.empId)).then(() => {\n        const index = this.employees.indexOf(employee);\n        if (index !== -1) {\n          this.employees.splice(index, 1);\n        }\n        alert(\"員工已刪除！\");\n      }).catch(() => {\n        alert(\"刪除員工失敗！\");\n      });\n    }\n  },\n  created() {\n    this.loadEmployees();\n    this.loadSeatingCharts();\n  }\n};","map":{"version":3,"names":["name","data","searchQuery","employees","newEmployee","empId","email","floorSeatSeq","isEmployeeDialogVisible","isEdit","employeeForm","seatingCharts","computed","filteredEmployees","filter","emp","includes","methods","loadEmployees","$apiService","get","$employees","getAllEmployees","then","res","catch","loadSeatingCharts","$seatingCharts","getEmployeeSeatAssignments","getSeatInfo","seat","find","s","floorNo","seatNo","showAddEmployeeDialog","showEditEmployeeDialog","employee","submitEmployeeForm","request","put","updateEmployee","index","findIndex","alert","closeDialog","post","createEmployee","push","deleteEmployee","delete","indexOf","splice","created"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\Employee\\Employee.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-container\">\r\n    <h1>員工資料管理</h1>\r\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"請輸入員編或姓名\" class=\"search-input\" />\r\n    <button @click=\"showAddEmployeeDialog\" class=\"btn add-btn\">\r\n      <i class=\"pi pi-plus\"></i> 新增員工\r\n    </button>\r\n    <table class=\"employee-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>員編</th>\r\n          <th>姓名</th>\r\n          <th>Email</th>\r\n          <th>座位</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"employee in filteredEmployees\" :key=\"employee.empId\">\r\n          <td>{{ employee.empId }}</td>\r\n          <td>{{ employee.name }}</td>\r\n          <td>{{ employee.email }}</td>\r\n          <td>\r\n            <button :class=\"['seat-btn', employee.floorSeatSeq === 0 ? 'unassigned' : 'assigned']\">\r\n              {{ getSeatInfo(employee.floorSeatSeq) }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button @click=\"showEditEmployeeDialog(employee)\" class=\"btn edit-btn\">\r\n              <i class=\"pi pi-pencil\"></i> 編輯\r\n            </button>\r\n            <button @click=\"deleteEmployee(employee)\" class=\"btn delete-btn\">\r\n              <i class=\"pi pi-trash\"></i> 刪除\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div v-if=\"isEmployeeDialogVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h3>{{ isEdit ? '編輯員工' : '新增員工' }}</h3>\r\n\r\n        <label>員編:</label>\r\n        <input type=\"text\" v-model=\"employeeForm.empId\" :disabled=\"isEdit\" placeholder=\"員編\" />\r\n\r\n        <label>姓名:</label>\r\n        <input type=\"text\" v-model=\"employeeForm.name\" placeholder=\"姓名\" />\r\n\r\n        <label>Email:</label>\r\n        <input type=\"email\" v-model=\"employeeForm.email\" placeholder=\"Email\" />\r\n\r\n        <label>座位:</label>\r\n        <input type=\"text\" :value=\"getSeatInfo(employeeForm.floorSeatSeq)\" disabled />\r\n\r\n        <div class=\"button-group\">\r\n          <button @click=\"submitEmployeeForm\" class=\"modal-btn confirm-btn\"><i class=\"pi pi-check\"></i>確認</button>\r\n          <button @click=\"closeDialog\" class=\"modal-btn cancel-btn\"><i class=\"pi pi-times\"></i>取消</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './Employee.css';\r\n\r\nexport default {\r\n  name: \"EmployeePage\",\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      employees: [],\r\n      newEmployee: { empId: '', name: '', email: '', floorSeatSeq: 0 },\r\n      isEmployeeDialogVisible: false,\r\n      isEdit: false,\r\n      employeeForm: { empId: '', name: '', email: '', floorSeatSeq: 0 },\r\n      seatingCharts: []\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter(emp => \r\n        (emp.empId && emp.empId.includes(this.searchQuery)) || \r\n        (emp.name && emp.name.includes(this.searchQuery))\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    loadEmployees() {\r\n      this.$apiService\r\n        .get(this.$employees.getAllEmployees)\r\n        .then((res) => {\r\n          this.employees = res;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    loadSeatingCharts() {\r\n      this.$apiService\r\n        .get(this.$seatingCharts.getEmployeeSeatAssignments)\r\n        .then((res) => {\r\n          this.seatingCharts = res;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    getSeatInfo(floorSeatSeq) {\r\n      if (floorSeatSeq === 0) {\r\n        return '未分配座位';\r\n      }\r\n      const seat = this.seatingCharts.find(s => s.floorSeatSeq === floorSeatSeq);\r\n      return seat ? `${seat.floorNo}樓: 座位${seat.seatNo}` : '座位資料無法找到';\r\n    },\r\n    showAddEmployeeDialog() {\r\n      this.isEmployeeDialogVisible = true;\r\n      this.isEdit = false;\r\n      this.employeeForm = { empId: '', name: '', email: '', floorSeatSeq: 0 };\r\n    },\r\n    showEditEmployeeDialog(employee) {\r\n      this.isEmployeeDialogVisible = true;\r\n      this.isEdit = true;\r\n      this.employeeForm = { ...employee };\r\n    },\r\n    submitEmployeeForm() {\r\n      if (this.isEdit) {\r\n        const request = {\r\n          empId: this.employeeForm.empId,\r\n          name: this.employeeForm.name,\r\n          email: this.employeeForm.email,\r\n          floorSeatSeq: this.employeeForm.floorSeatSeq,\r\n        };\r\n        this.$apiService\r\n          .put(this.$employees.updateEmployee(this.employeeForm.empId), request)\r\n          .then(() => {\r\n            const index = this.employees.findIndex(emp => emp.empId === this.employeeForm.empId);\r\n            if (index !== -1) {\r\n              this.employees[index] = { ...this.employeeForm };\r\n            }\r\n            alert(\"員工資料更新成功！\");\r\n            this.closeDialog();\r\n          })\r\n          .catch(() => {\r\n            alert(\"更新員工資料失敗！\");\r\n          });\r\n      } else {\r\n        const request = {\r\n          empId: this.employeeForm.empId,\r\n          name: this.employeeForm.name,\r\n          email: this.employeeForm.email,\r\n          floorSeatSeq: null,\r\n        };\r\n        this.$apiService\r\n          .post(this.$employees.createEmployee, request)\r\n          .then((res) => {\r\n            this.employees.push(res);\r\n            alert(\"員工新增成功！\");\r\n            this.closeDialog();\r\n          })\r\n          .catch(() => {\r\n            alert(\"新增員工失敗！\");\r\n          });\r\n      }\r\n    },\r\n    closeDialog() {\r\n      this.isEmployeeDialogVisible = false;\r\n      this.employeeForm = { empId: '', name: '', email: '', floorSeatSeq: null };\r\n      this.isEdit = false;\r\n      this.loadEmployees();\r\n    },\r\n    deleteEmployee(employee) {\r\n      this.$apiService\r\n        .delete(this.$employees.deleteEmployee(employee.empId))\r\n        .then(() => {\r\n          const index = this.employees.indexOf(employee);\r\n          if (index !== -1) {\r\n            this.employees.splice(index, 1);\r\n          }\r\n          alert(\"員工已刪除！\");\r\n        })\r\n        .catch(() => {\r\n          alert(\"刪除員工失敗！\");\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.loadEmployees();\r\n    this.loadSeatingCharts();\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}