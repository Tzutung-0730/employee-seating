{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport './SeatArrangement.css';\nexport default {\n  data() {\n    return {\n      seatingCharts: [],\n      employees: [],\n      selectedSeat: null,\n      selectedEmployee: {\n        empId: '',\n        name: '',\n        email: ''\n      },\n      searchQuery: '',\n      isEmployeeSelectOpen: false\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      return this.employees.filter(emp => (emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery)) && emp.floorSeatSeq === 0);\n    }\n  },\n  created() {\n    this.loadEmployees();\n    this.loadSeatingCharts();\n  },\n  methods: {\n    loadEmployees() {\n      this.$apiService.get(this.$employees.getAllEmployees).then(res => {\n        this.employees = res;\n      }).catch(() => {});\n    },\n    loadSeatingCharts() {\n      this.$apiService.get(this.$seatingCharts.getEmployeeSeatAssignments).then(res => {\n        this.seatingCharts = res;\n      }).catch(() => {});\n    },\n    getSeatClass(seat) {\n      if (seat.isOccupied) {\n        return 'occupied';\n      }\n      if (this.selectedSeat && this.selectedSeat.seatNo === seat.seatNo && this.selectedSeat.floorNo === seat.floorNo) {\n        return 'selected';\n      }\n      return 'available';\n    },\n    selectSeat(seat) {\n      if (this.selectedSeat && this.selectedSeat.seatNo === seat.seatNo && this.selectedSeat.floorNo === seat.floorNo) {\n        this.selectedSeat = null;\n      } else {\n        this.selectedSeat = seat;\n      }\n    },\n    selectEmployee(event) {\n      const empId = event.target.value;\n      if (this.selectedEmployee.empId === empId) {\n        this.selectedEmployee = {\n          empId: '',\n          name: '',\n          email: ''\n        };\n      } else {\n        this.setSelectedEmployee(empId);\n      }\n    },\n    setSelectedEmployee(empId) {\n      const selectedEmp = this.employees.find(emp => emp.empId === empId);\n      if (selectedEmp) {\n        this.selectedEmployee = {\n          empId: selectedEmp.empId,\n          name: selectedEmp.name,\n          email: selectedEmp.email\n        };\n      }\n    },\n    toggleEmployeeSelection(emp) {\n      if (this.selectedEmployee.empId === emp.empId) {\n        this.selectedEmployee = {\n          empId: '',\n          name: '',\n          email: ''\n        };\n      } else {\n        this.setSelectedEmployee(emp.empId);\n      }\n    },\n    submitArrangement() {\n      if (!this.selectedEmployee.empId || !this.selectedSeat) {\n        if (!this.selectedEmployee.empId) {\n          this.$refs.employeeSelect.focus();\n          this.isEmployeeSelectOpen = true;\n        } else if (!this.selectedSeat) {\n          alert(\"請選擇座位！\");\n        }\n        return;\n      }\n      const request = {\n        empId: this.selectedEmployee.empId,\n        name: this.selectedEmployee.name,\n        email: this.selectedEmployee.email,\n        floorSeatSeq: this.selectedSeat.floorSeatSeq\n      };\n      if (this.selectedEmployee.empId === '' && this.selectedSeat) {\n        this.releaseSeat();\n        return;\n      }\n      this.$apiService.put(this.$employees.updateEmployee(this.selectedEmployee.empId), request).then(() => {\n        alert(\"座位安排更新成功！\");\n        this.loadSeatingCharts();\n        this.selectedSeat = null;\n        this.selectedEmployee = {};\n      }).catch(error => {\n        console.error(\"更新失敗:\", error);\n        alert(\"更新失敗：\" + error.message);\n      });\n    },\n    openEmployeeSelect() {\n      this.isEmployeeSelectOpen = true;\n    },\n    releaseSeat() {\n      const request = {\n        empId: '',\n        floorSeatSeq: this.selectedSeat.floorSeatSeq\n      };\n      this.$apiService.put(this.$seatingCharts.updateSeatAvailable(this.selectedSeat.floorSeatSeq), request).then(() => {\n        alert(\"座位已釋放！\");\n        this.loadSeatingCharts();\n        this.selectedSeat = null;\n      }).catch(error => {\n        console.error(\"釋放座位失敗:\", error);\n        alert(\"釋放座位失敗：\" + error.message);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","seatingCharts","employees","selectedSeat","selectedEmployee","empId","name","email","searchQuery","isEmployeeSelectOpen","computed","filteredEmployees","filter","emp","includes","floorSeatSeq","created","loadEmployees","loadSeatingCharts","methods","$apiService","get","$employees","getAllEmployees","then","res","catch","$seatingCharts","getEmployeeSeatAssignments","getSeatClass","seat","isOccupied","seatNo","floorNo","selectSeat","selectEmployee","event","target","value","setSelectedEmployee","selectedEmp","find","toggleEmployeeSelection","submitArrangement","$refs","employeeSelect","focus","alert","request","releaseSeat","put","updateEmployee","error","console","message","openEmployeeSelect","updateSeatAvailable"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\SeatArrangement\\SeatArrangement.vue"],"sourcesContent":["<template>\r\n  <div class=\"seating-arrangement\">\r\n    <h1 class=\"title\">員工座位安排</h1>\r\n\r\n    <div class=\"employee-selection\">\r\n      <label for=\"employeeSelect\">選擇員工：</label>\r\n      <select v-model=\"selectedEmployee.empId\" id=\"employeeSelect\" @focus=\"openEmployeeSelect\" @change=\"selectEmployee($event)\" ref=\"employeeSelect\">\r\n        <option value=\"\" disabled selected>請選擇員工</option>\r\n        <option v-for=\"emp in filteredEmployees\" :key=\"emp.empId\" :value=\"emp.empId\" @click=\"toggleEmployeeSelection(emp)\">\r\n          {{ emp.name }} (員編: {{ emp.empId }})\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"seats\">\r\n      <div v-for=\"seat in seatingCharts\" :key=\"seat.seatNo\" class=\"seat-container\">\r\n        <button\r\n          :class=\"getSeatClass(seat)\"\r\n          @click=\"selectSeat(seat)\"\r\n        >\r\n          {{ seat.floorNo }} 樓：座位{{ seat.seatNo }} {{ seat.isOccupied ? '[ 員編:' + seat.empId + ' ]' : '' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"submit-btn\">\r\n      <button @click=\"submitArrangement\">送出</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './SeatArrangement.css';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      seatingCharts: [],\r\n      employees: [],\r\n      selectedSeat: null,\r\n      selectedEmployee: { empId: '', name: '', email: '' },\r\n      searchQuery: '',\r\n      isEmployeeSelectOpen: false\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter(emp => \r\n        (emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery)) && emp.floorSeatSeq === 0\r\n      );\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.loadEmployees();\r\n    this.loadSeatingCharts();\r\n  },\r\n\r\n  methods: {\r\n    loadEmployees() {\r\n      this.$apiService\r\n        .get(this.$employees.getAllEmployees)\r\n        .then((res) => {\r\n          this.employees = res;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n\r\n    loadSeatingCharts() {\r\n      this.$apiService\r\n        .get(this.$seatingCharts.getEmployeeSeatAssignments)\r\n        .then((res) => {\r\n          this.seatingCharts = res;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n\r\n    getSeatClass(seat) {\r\n      if (seat.isOccupied) {\r\n        return 'occupied';\r\n      }\r\n      if (this.selectedSeat && this.selectedSeat.seatNo === seat.seatNo && this.selectedSeat.floorNo === seat.floorNo) {\r\n        return 'selected';\r\n      }\r\n      return 'available';\r\n    },\r\n\r\n    selectSeat(seat) {\r\n      if (this.selectedSeat && this.selectedSeat.seatNo === seat.seatNo && this.selectedSeat.floorNo === seat.floorNo) {\r\n        this.selectedSeat = null;\r\n      } else {\r\n        this.selectedSeat = seat;\r\n      }\r\n    },\r\n\r\n    selectEmployee(event) {\r\n      const empId = event.target.value;\r\n\r\n      if (this.selectedEmployee.empId === empId) {\r\n        this.selectedEmployee = { empId: '', name: '', email: '' };\r\n      } else {\r\n        this.setSelectedEmployee(empId);\r\n      }\r\n    },\r\n\r\n    setSelectedEmployee(empId) {\r\n      const selectedEmp = this.employees.find(emp => emp.empId === empId);\r\n      if (selectedEmp) {\r\n        this.selectedEmployee = { \r\n          empId: selectedEmp.empId, \r\n          name: selectedEmp.name, \r\n          email: selectedEmp.email \r\n        };\r\n      }\r\n    },\r\n\r\n    toggleEmployeeSelection(emp) {\r\n      if (this.selectedEmployee.empId === emp.empId) {\r\n        this.selectedEmployee = { empId: '', name: '', email: '' };\r\n      } else {\r\n        this.setSelectedEmployee(emp.empId);\r\n      }\r\n    },\r\n\r\n    submitArrangement() {\r\n      if (!this.selectedEmployee.empId || !this.selectedSeat) {\r\n        if (!this.selectedEmployee.empId) {\r\n          this.$refs.employeeSelect.focus();\r\n          this.isEmployeeSelectOpen = true;\r\n        } else if (!this.selectedSeat) {\r\n          alert(\"請選擇座位！\");\r\n        }\r\n        return;\r\n      }\r\n\r\n      const request = {\r\n        empId: this.selectedEmployee.empId,\r\n        name: this.selectedEmployee.name,\r\n        email: this.selectedEmployee.email,\r\n        floorSeatSeq: this.selectedSeat.floorSeatSeq\r\n      };\r\n\r\n      if (this.selectedEmployee.empId === '' && this.selectedSeat) {\r\n        this.releaseSeat();\r\n        return;\r\n      }\r\n\r\n      this.$apiService\r\n        .put(this.$employees.updateEmployee(this.selectedEmployee.empId), request)\r\n        .then(() => {\r\n          alert(\"座位安排更新成功！\");\r\n          this.loadSeatingCharts();\r\n          this.selectedSeat = null;\r\n          this.selectedEmployee = {};\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"更新失敗:\", error);\r\n          alert(\"更新失敗：\" + error.message);\r\n        });\r\n    },\r\n\r\n    openEmployeeSelect() {\r\n      this.isEmployeeSelectOpen = true;\r\n    },\r\n\r\n    releaseSeat() {\r\n      const request = {\r\n        empId: '', \r\n        floorSeatSeq: this.selectedSeat.floorSeatSeq\r\n      };\r\n\r\n      this.$apiService\r\n        .put(this.$seatingCharts.updateSeatAvailable(this.selectedSeat.floorSeatSeq), request)\r\n        .then(() => {\r\n          alert(\"座位已釋放！\");\r\n          this.loadSeatingCharts();\r\n          this.selectedSeat = null;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"釋放座位失敗:\", error);\r\n          alert(\"釋放座位失敗：\" + error.message);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}