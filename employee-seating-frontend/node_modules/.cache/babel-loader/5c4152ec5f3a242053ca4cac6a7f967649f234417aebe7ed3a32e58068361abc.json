{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  name: \"EmployeePage\",\n  // 改成多單詞命名\n  data() {\n    return {\n      searchQuery: '',\n      employees: [],\n      newEmployee: {\n        empId: '',\n        name: '',\n        email: ''\n      }\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      return this.employees.filter(emp => emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery));\n    }\n  },\n  methods: {\n    addEmployee() {\n      this.employees.push({\n        ...this.newEmployee\n      });\n      this.newEmployee = {\n        empId: '',\n        name: '',\n        email: ''\n      };\n    },\n    editEmployee(employee) {\n      alert(`編輯員工: ${employee.name}`);\n    },\n    deleteEmployee(employee) {\n      const index = this.employees.indexOf(employee);\n      if (index !== -1) {\n        this.employees.splice(index, 1);\n      }\n    }\n  },\n  created() {\n    this.employees = [{\n      empId: 'E001',\n      name: 'John Doe',\n      email: 'john.doe@example.com'\n    }, {\n      empId: 'E002',\n      name: 'Jane Smith',\n      email: 'jane.smith@example.com'\n    }];\n  }\n};","map":{"version":3,"names":["name","data","searchQuery","employees","newEmployee","empId","email","computed","filteredEmployees","filter","emp","includes","methods","addEmployee","push","editEmployee","employee","alert","deleteEmployee","index","indexOf","splice","created"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\Employee\\Employee.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-container\">\r\n    <h1>員工資料管理</h1>\r\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"搜尋員工...\" class=\"search-input\" />\r\n    <button @click=\"addEmployee\" class=\"btn add-btn\">新增員工</button>\r\n    <table class=\"employee-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>員編</th>\r\n          <th>姓名</th>\r\n          <th>Email</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"employee in filteredEmployees\" :key=\"employee.empId\">\r\n          <td>{{ employee.empId }}</td>\r\n          <td>{{ employee.name }}</td>\r\n          <td>{{ employee.email }}</td>\r\n          <td>\r\n            <button @click=\"editEmployee(employee)\" class=\"btn edit-btn\">編輯</button>\r\n            <button @click=\"deleteEmployee(employee)\" class=\"btn delete-btn\">刪除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"EmployeePage\",  // 改成多單詞命名\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      employees: [],\r\n      newEmployee: { empId: '', name: '', email: '' }\r\n    };\r\n  },\r\n  computed: {\r\n    filteredEmployees() {\r\n      return this.employees.filter(emp =>\r\n        emp.empId.includes(this.searchQuery) || emp.name.includes(this.searchQuery)\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    addEmployee() {\r\n      this.employees.push({ ...this.newEmployee });\r\n      this.newEmployee = { empId: '', name: '', email: '' };\r\n    },\r\n    editEmployee(employee) {\r\n      alert(`編輯員工: ${employee.name}`);\r\n    },\r\n    deleteEmployee(employee) {\r\n      const index = this.employees.indexOf(employee);\r\n      if (index !== -1) {\r\n        this.employees.splice(index, 1);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.employees = [\r\n      { empId: 'E001', name: 'John Doe', email: 'john.doe@example.com' },\r\n      { empId: 'E002', name: 'Jane Smith', email: 'jane.smith@example.com' }\r\n    ];\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 你的CSS樣式 */\r\n</style>\r\n"],"mappings":";;;AA8BA,eAAe;EACbA,IAAI,EAAE,cAAc;EAAG;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEL,IAAI,EAAE,EAAE;QAAEM,KAAK,EAAE;MAAG;IAChD,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACL,SAAS,CAACM,MAAM,CAACC,GAAE,IAC7BA,GAAG,CAACL,KAAK,CAACM,QAAQ,CAAC,IAAI,CAACT,WAAW,KAAKQ,GAAG,CAACV,IAAI,CAACW,QAAQ,CAAC,IAAI,CAACT,WAAW,CAC5E,CAAC;IACH;EACF,CAAC;EACDU,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACV,SAAS,CAACW,IAAI,CAAC;QAAE,GAAG,IAAI,CAACV;MAAY,CAAC,CAAC;MAC5C,IAAI,CAACA,WAAU,GAAI;QAAEC,KAAK,EAAE,EAAE;QAAEL,IAAI,EAAE,EAAE;QAAEM,KAAK,EAAE;MAAG,CAAC;IACvD,CAAC;IACDS,YAAYA,CAACC,QAAQ,EAAE;MACrBC,KAAK,CAAC,SAASD,QAAQ,CAAChB,IAAI,EAAE,CAAC;IACjC,CAAC;IACDkB,cAAcA,CAACF,QAAQ,EAAE;MACvB,MAAMG,KAAI,GAAI,IAAI,CAAChB,SAAS,CAACiB,OAAO,CAACJ,QAAQ,CAAC;MAC9C,IAAIG,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAAChB,SAAS,CAACkB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACjC;IACF;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACnB,SAAQ,GAAI,CACf;MAAEE,KAAK,EAAE,MAAM;MAAEL,IAAI,EAAE,UAAU;MAAEM,KAAK,EAAE;IAAuB,CAAC,EAClE;MAAED,KAAK,EAAE,MAAM;MAAEL,IAAI,EAAE,YAAY;MAAEM,KAAK,EAAE;IAAyB,EACtE;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}