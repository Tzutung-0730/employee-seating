{"ast":null,"code":"import './SeatArrangement.css';\nexport default {\n  data() {\n    return {\n      seatingCharts: [],\n      // 儲存所有樓層的座位資料\n      employees: [],\n      // 儲存所有員工資料\n      selectedSeat: null,\n      // 被選中的座位\n      selectedEmployee: null // 被選中的員工編號\n    };\n  },\n  created() {\n    this.loadEmployees();\n    this.loadSeatingCharts();\n  },\n  methods: {\n    loadEmployees() {\n      this.$apiService.get(this.$employees.getAllEmployees).then(res => {\n        this.employees = res;\n        console.log(\"employees\", this.employees);\n      }).catch(() => {\n        // Handle error here\n      });\n    },\n    loadSeatingCharts() {\n      this.$apiService.get(this.$seatingCharts.getEmployeeSeatAssignments).then(res => {\n        this.seatingCharts = res;\n        console.log(\"seatingCharts\", this.seatingCharts);\n      }).catch(() => {\n        // Handle error here\n      });\n    },\n    // Method to get the class for each seat based on the seat status\n    getSeatClass(seat) {\n      if (seat.isOccupied) {\n        return 'occupied';\n      }\n      if (this.selectedSeat && this.selectedSeat.seatNo === seat.seatNo && this.selectedSeat.floorNo === seat.floorNo) {\n        return 'selected';\n      }\n      return 'available';\n    },\n    // Method to handle seat selection\n    selectSeat(seat) {\n      console.log(\"Selected Seat:\", seat);\n      if (!seat.isOccupied) {\n        this.selectedSeat = seat;\n      }\n    },\n    // Method to handle form submission\n    submitArrangement() {\n      if (this.selectedSeat && this.selectedEmployee) {\n        const request = {\n          empId: this.selectedEmployee.empId,\n          name: this.selectedEmployee.name,\n          email: this.selectedEmployee.email,\n          floorSeatSeq: this.selectedSeat.floorSeatSeq\n        };\n        this.$apiService.put(this.$employees.updateEmployee(this.selectedEmpId), request).then(res => {\n          alert(\"座位安排更新成功！\");\n          console.log(\"更新座位成功：\", res);\n          this.loadSeatingCharts();\n          this.selectedSeat = null;\n          this.selectedEmpId = '';\n        }).catch(error => {\n          console.error(\"更新失敗:\", error);\n          alert(\"更新失敗：\" + error.message);\n        });\n      } else {\n        alert(\"請選擇員工和座位！\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","seatingCharts","employees","selectedSeat","selectedEmployee","created","loadEmployees","loadSeatingCharts","methods","$apiService","get","$employees","getAllEmployees","then","res","console","log","catch","$seatingCharts","getEmployeeSeatAssignments","getSeatClass","seat","isOccupied","seatNo","floorNo","selectSeat","submitArrangement","request","empId","name","email","floorSeatSeq","put","updateEmployee","selectedEmpId","alert","error","message"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\SeatArrangement\\SeatArrangement.vue"],"sourcesContent":["<template>\r\n  <div class=\"seating-arrangement\">\r\n    <h1>員工座位安排</h1>\r\n\r\n    <div class=\"employee-selection\">\r\n      <label for=\"employeeSelect\">選擇員工：</label>\r\n      <select v-model=\"selectedEmployee.empId\" id=\"employeeSelect\">\r\n        <option v-for=\"emp in employees\" :key=\"emp.empId\" :value=\"emp.empId\">\r\n          {{ emp.name }} (員編: {{ emp.empId }})\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"seats\">\r\n      <div v-for=\"seat in seatingCharts\" :key=\"seat.seatNo\" class=\"seat-container\">\r\n        <button\r\n          :class=\"getSeatClass(seat)\"\r\n          @click=\"selectSeat(seat)\"\r\n        >\r\n        {{ seat.floorNo }} 樓：座位{{ seat.seatNo }} {{ seat.isOccupied ? '[ 員編:' + seat.empId + ' ]' : '' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"submit-btn\">\r\n      <button @click=\"submitArrangement\">送出</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './SeatArrangement.css';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      seatingCharts: [],  // 儲存所有樓層的座位資料\r\n      employees: [],  // 儲存所有員工資料\r\n      selectedSeat: null,  // 被選中的座位\r\n      selectedEmployee: null,  // 被選中的員工編號\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.loadEmployees();\r\n    this.loadSeatingCharts();\r\n  },\r\n\r\n  methods: {\r\n    loadEmployees() {\r\n      this.$apiService\r\n        .get(this.$employees.getAllEmployees)\r\n        .then((res) => {\r\n          this.employees = res;\r\n          console.log(\"employees\", this.employees);\r\n        })\r\n        .catch(() => {\r\n          // Handle error here\r\n        });\r\n    },\r\n    \r\n    loadSeatingCharts() {\r\n      this.$apiService\r\n        .get(this.$seatingCharts.getEmployeeSeatAssignments)\r\n        .then((res) => {\r\n          this.seatingCharts = res;\r\n          console.log(\"seatingCharts\", this.seatingCharts);\r\n        })\r\n        .catch(() => {\r\n          // Handle error here\r\n        });\r\n    },\r\n\r\n    // Method to get the class for each seat based on the seat status\r\n    getSeatClass(seat) {\r\n      if (seat.isOccupied) {\r\n        return 'occupied';\r\n      }\r\n      if (this.selectedSeat && this.selectedSeat.seatNo === seat.seatNo && this.selectedSeat.floorNo === seat.floorNo) {\r\n        return 'selected';\r\n      }\r\n      return 'available';\r\n    },\r\n\r\n    // Method to handle seat selection\r\n    selectSeat(seat) {\r\n      console.log(\"Selected Seat:\", seat);\r\n      if (!seat.isOccupied) {\r\n        this.selectedSeat = seat;\r\n      }\r\n    },\r\n\r\n    // Method to handle form submission\r\n    submitArrangement() {\r\n      if (this.selectedSeat && this.selectedEmployee) {\r\n        const request = {\r\n          empId: this.selectedEmployee.empId,\r\n          name: this.selectedEmployee.name,\r\n          email: this.selectedEmployee.email,\r\n          floorSeatSeq: this.selectedSeat.floorSeatSeq\r\n        };\r\n        this.$apiService\r\n        .put(this.$employees.updateEmployee(this.selectedEmpId), request)\r\n        .then((res) => {\r\n          alert(\"座位安排更新成功！\");\r\n          console.log(\"更新座位成功：\", res);\r\n          this.loadSeatingCharts();\r\n          this.selectedSeat = null;\r\n          this.selectedEmpId = '';\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"更新失敗:\", error);\r\n          alert(\"更新失敗：\" + error.message);\r\n        });\r\n      } else {\r\n        alert(\"請選擇員工和座位！\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}