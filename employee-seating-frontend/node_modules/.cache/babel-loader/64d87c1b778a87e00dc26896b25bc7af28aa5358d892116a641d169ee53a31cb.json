{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"seating-container\"\n};\nconst _hoisted_2 = {\n  class: \"seating-table\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"座位資料管理\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"搜尋座位...\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addSeat && $options.addSeat(...args)),\n    class: \"btn add-btn\"\n  }, \"新增座位\"), _createElementVNode(\"table\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"樓層\"), _createElementVNode(\"th\", null, \"座位號\"), _createElementVNode(\"th\", null, \"佔用狀態\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredSeatingCharts, seat => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: seat.floorSeatSeq\n    }, [_createElementVNode(\"td\", null, _toDisplayString(seat.floorNo), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(seat.seatNo), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(seat.isOccupied ? '佔用' : '空閒'), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editSeat(seat),\n      class: \"btn edit-btn\"\n    }, \"編輯\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteSeat(seat),\n      class: \"btn delete-btn\"\n    }, \"刪除\", 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","_cache","$event","$data","searchQuery","placeholder","onClick","args","$options","addSeat","_hoisted_2","_Fragment","_renderList","filteredSeatingCharts","seat","key","floorSeatSeq","_toDisplayString","floorNo","seatNo","isOccupied","editSeat","_hoisted_3","deleteSeat","_hoisted_4"],"sources":["C:\\Users\\tzutung\\employee-seating\\employee-seating-frontend\\src\\views\\SeatChart\\SeatChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"seating-container\">\r\n    <h1>座位資料管理</h1>\r\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"搜尋座位...\" class=\"search-input\" />\r\n    <button @click=\"addSeat\" class=\"btn add-btn\">新增座位</button>\r\n    <table class=\"seating-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>樓層</th>\r\n          <th>座位號</th>\r\n          <th>佔用狀態</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"seat in filteredSeatingCharts\" :key=\"seat.floorSeatSeq\">\r\n          <td>{{ seat.floorNo }}</td>\r\n          <td>{{ seat.seatNo }}</td>\r\n          <td>{{ seat.isOccupied ? '佔用' : '空閒' }}</td>\r\n          <td>\r\n            <button @click=\"editSeat(seat)\" class=\"btn edit-btn\">編輯</button>\r\n            <button @click=\"deleteSeat(seat)\" class=\"btn delete-btn\">刪除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport './SeatChart.css';\r\n\r\nexport default {\r\n  name: \"SeatChartPage\",\r\n  data() {\r\n    return {\r\n      seatingCharts: [],  // 座位資料\r\n      searchQuery: '',    // 搜尋查詢\r\n      newSeat: { floorNo: 1, seatNo: 1, isOccupied: false }  // 新座位資料\r\n    };\r\n  },\r\n  computed: {\r\n    // 根據樓層號和座位號篩選座位\r\n    filteredSeatingCharts() {\r\n      return this.seatingCharts.filter(seat => \r\n        seat.floorNo.toString().includes(this.searchQuery) || seat.seatNo.toString().includes(this.searchQuery)\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    // 載入座位資料\r\n    loadSeatingCharts() {\r\n      this.$apiService\r\n        .get(this.$seatingCharts.getEmployeeSeatAssignments)  // 呼叫API\r\n        .then((res) => {\r\n          this.seatingCharts = res;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error loading seating charts:\", error);\r\n        });\r\n    },\r\n\r\n    // 新增座位\r\n    addSeat() {\r\n      this.$apiService\r\n        .post(this.$seatingCharts.addSeat, this.newSeat)  // 使用API新增座位\r\n        .then((res) => {\r\n          this.seatingCharts.push(res);  // 新增座位後推送到列表\r\n          this.newSeat = { floorNo: 1, seatNo: 1, isOccupied: false };  // 重設表單\r\n          alert(\"座位新增成功！\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding seat:\", error);\r\n          alert(\"新增座位失敗！\");\r\n        });\r\n    },\r\n\r\n    // 編輯座位\r\n    editSeat(seat) {\r\n      const updatedSeat = { ...seat, isOccupied: !seat.isOccupied };  // 假設修改座位的佔用狀態\r\n      this.$apiService\r\n        .put(this.$seatingCharts.updateSeat(updatedSeat.floorSeatSeq), updatedSeat)  // 更新座位資料\r\n        .then((res) => {\r\n          const index = this.seatingCharts.findIndex(s => s.floorSeatSeq === seat.floorSeatSeq);\r\n          if (index !== -1) {\r\n            this.seatingCharts[index] = res;  // 更新座位資料\r\n          }\r\n          alert(\"座位更新成功！\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error editing seat:\", error);\r\n          alert(\"更新座位失敗！\");\r\n        });\r\n    },\r\n\r\n    // 刪除座位\r\n    deleteSeat(seat) {\r\n      this.$apiService\r\n        .delete(this.$seatingCharts.deleteSeat(seat.floorSeatSeq))  // 刪除座位資料\r\n        .then(() => {\r\n          const index = this.seatingCharts.indexOf(seat);\r\n          if (index !== -1) {\r\n            this.seatingCharts.splice(index, 1);  // 從列表中移除已刪除的座位\r\n          }\r\n          alert(\"座位已刪除！\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting seat:\", error);\r\n          alert(\"刪除座位失敗！\");\r\n        });\r\n    }\r\n  },\r\n  created() {\r\n    this.loadSeatingCharts();  // 頁面加載時獲取座位資料\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;EAIrBA,KAAK,EAAC;AAAe;mBALhC;mBAAA;;uBACEC,mBAAA,CAyBM,OAzBNC,UAyBM,G,0BAxBJC,mBAAA,CAAe,YAAX,QAAM,sB,gBACVA,mBAAA,CAAsF;IAA/EC,IAAI,EAAC,MAAM;IAHtB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGgCC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,WAAW,EAAC,SAAS;IAACT,KAAK,EAAC;iDAAzCO,KAAA,CAAAC,WAAW,E,GACvCL,mBAAA,CAA0D;IAAjDO,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAEX,KAAK,EAAC;KAAc,MAAI,GACjDG,mBAAA,CAoBQ,SApBRW,UAoBQ,G,0BAnBNX,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAW,YAAP,IAAE,E,wBAGVA,mBAAA,CAUQ,iB,kBATNF,mBAAA,CAQKc,SAAA,QAvBbC,WAAA,CAe2BJ,QAAA,CAAAK,qBAAqB,EAA7BC,IAAI;yBAAfjB,mBAAA,CAQK;MARsCkB,GAAG,EAAED,IAAI,CAACE;QACnDjB,mBAAA,CAA2B,YAAAkB,gBAAA,CAApBH,IAAI,CAACI,OAAO,kBACnBnB,mBAAA,CAA0B,YAAAkB,gBAAA,CAAnBH,IAAI,CAACK,MAAM,kBAClBpB,mBAAA,CAA4C,YAAAkB,gBAAA,CAArCH,IAAI,CAACM,UAAU,gCACtBrB,mBAAA,CAGK,aAFHA,mBAAA,CAAgE;MAAvDO,OAAK,EAAAJ,MAAA,IAAEM,QAAA,CAAAa,QAAQ,CAACP,IAAI;MAAGlB,KAAK,EAAC;OAAe,IAAE,iBApBnE0B,UAAA,GAqBYvB,mBAAA,CAAoE;MAA3DO,OAAK,EAAAJ,MAAA,IAAEM,QAAA,CAAAe,UAAU,CAACT,IAAI;MAAGlB,KAAK,EAAC;OAAiB,IAAE,iBArBvE4B,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}