{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"seats\"\n};\nconst _hoisted_2 = [\"onClick\", \"disabled\"];\nconst _hoisted_3 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"員工座位安排\", -1 /* HOISTED */)), _createCommentVNode(\" 顯示座位的樓層和座位 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.seatingCharts, floor => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: floor.floorNo,\n      class: \"floor\"\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(floor.floorNo) + \" 樓\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(floor.seats, seat => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: seat.floorSeatSeq,\n        class: \"seat-container\"\n      }, [_createElementVNode(\"button\", {\n        class: _normalizeClass($options.getSeatClass(seat)),\n        onClick: $event => $options.selectSeat(seat),\n        disabled: seat.isOccupied\n      }, \" 座位\" + _toDisplayString(seat.seatNo) + \" [\" + _toDisplayString(seat.isOccupied ? '員編:' + seat.empId : '空位') + \"] \", 11 /* TEXT, CLASS, PROPS */, _hoisted_2)]);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 員工選擇下拉選單 \"), _createElementVNode(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"employeeSelect\"\n  }, \"選擇員工：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedEmpId = $event),\n    id: \"employeeSelect\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.employees, emp => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: emp.empId,\n      value: emp.empId\n    }, _toDisplayString(emp.name) + \" (員編: \" + _toDisplayString(emp.empId) + \") \", 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedEmpId]])]), _createCommentVNode(\" 送出按鈕 \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitArrangement && $options.submitArrangement(...args))\n  }, \"送出\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_createCommentVNode","_Fragment","_renderList","$data","seatingCharts","floor","key","floorNo","_toDisplayString","_hoisted_1","seats","seat","floorSeatSeq","_normalizeClass","$options","getSeatClass","onClick","$event","selectSeat","disabled","isOccupied","seatNo","empId","_hoisted_2","for","_cache","selectedEmpId","id","employees","emp","value","name","_hoisted_3","args","submitArrangement"],"sources":["C:\\Users\\tzutung\\Tzutung\\employee-seating-frontend\\src\\views\\SeatArrangement\\SeatArrangement.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>員工座位安排</h1>\r\n\r\n    <!-- 顯示座位的樓層和座位 -->\r\n    <div v-for=\"floor in seatingCharts\" :key=\"floor.floorNo\" class=\"floor\">\r\n      <h2>{{ floor.floorNo }} 樓</h2>\r\n      <div class=\"seats\">\r\n        <div v-for=\"seat in floor.seats\" :key=\"seat.floorSeatSeq\" class=\"seat-container\">\r\n          <button\r\n            :class=\"getSeatClass(seat)\"\r\n            @click=\"selectSeat(seat)\"\r\n            :disabled=\"seat.isOccupied\"\r\n          >\r\n            座位{{ seat.seatNo }} [{{ seat.isOccupied ? '員編:' + seat.empId : '空位' }}]\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 員工選擇下拉選單 -->\r\n    <div>\r\n      <label for=\"employeeSelect\">選擇員工：</label>\r\n      <select v-model=\"selectedEmpId\" id=\"employeeSelect\">\r\n        <option v-for=\"emp in employees\" :key=\"emp.empId\" :value=\"emp.empId\">\r\n          {{ emp.name }} (員編: {{ emp.empId }})\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- 送出按鈕 -->\r\n    <button @click=\"submitArrangement\">送出</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAllSeatingCharts, updateSeatStatusToOccupied, updateSeatStatusToAvailable } from '../../api/seatingChartApi';\r\nimport { getAllEmployees } from '../../api/employeeApi';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      seatingCharts: [],  // 儲存所有樓層的座位資料\r\n      employees: [],  // 儲存所有員工資料\r\n      selectedSeat: null,  // 被選中的座位\r\n      selectedEmpId: '',  // 被選中的員工編號\r\n    };\r\n  },\r\n  created() {\r\n    this.loadSeatingCharts();\r\n    this.loadEmployees();\r\n  },\r\n  methods: {\r\n    // 加載座位資料\r\n    async loadSeatingCharts() {\r\n      try {\r\n        this.seatingCharts = await getAllSeatingCharts();\r\n      } catch (error) {\r\n        console.error('Error loading seating charts:', error);\r\n      }\r\n    },\r\n    // 加載員工資料\r\n    async loadEmployees() {\r\n      try {\r\n        this.employees = await getAllEmployees();\r\n      } catch (error) {\r\n        console.error('Error loading employees:', error);\r\n      }\r\n    },\r\n    // 根據座位狀態設定按鈕的樣式\r\n    getSeatClass(seat) {\r\n      if (seat.isOccupied) return 'seat-occupied'; // 已佔用\r\n      if (this.selectedSeat && this.selectedSeat.floorSeatSeq === seat.floorSeatSeq) return 'seat-selected'; // 選擇中的座位\r\n      return 'seat-empty'; // 空位\r\n    },\r\n    // 設定選擇的座位\r\n    selectSeat(seat) {\r\n      if (seat.isOccupied) return; // 如果座位已佔用，不能選擇\r\n      this.selectedSeat = seat;\r\n    },\r\n    // 提交選擇的座位安排\r\n    async submitArrangement() {\r\n      if (!this.selectedSeat || !this.selectedEmpId) {\r\n        alert('請選擇員工和座位！');\r\n        return;\r\n      }\r\n\r\n      // 更新座位的佔用狀態\r\n      try {\r\n        if (this.selectedSeat.isOccupied) {\r\n          // 如果該座位已佔用，將其標記為可用\r\n          await updateSeatStatusToAvailable(this.selectedSeat.floorSeatSeq);\r\n        }\r\n        // 標記新的座位為已佔用，並更新員工資料\r\n        await updateSeatStatusToOccupied(this.selectedSeat.floorSeatSeq);\r\n        alert('座位安排成功！');\r\n        this.loadSeatingCharts(); // 重新加載座位資料\r\n      } catch (error) {\r\n        console.error('Error updating seating arrangement:', error);\r\n        alert('座位安排失敗！');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped src=\"./SeatArrangement.css\"></style>\r\n"],"mappings":";;EAOWA,KAAK,EAAC;AAAO;mBAPxB;mBAAA;;uBACEC,mBAAA,CA+BM,c,0BA9BJC,mBAAA,CAAe,YAAX,QAAM,sBAEVC,mBAAA,gBAAmB,G,kBACnBF,mBAAA,CAaMG,SAAA,QAlBVC,WAAA,CAKyBC,KAAA,CAAAC,aAAa,EAAtBC,KAAK;yBAAjBP,mBAAA,CAaM;MAb+BQ,GAAG,EAAED,KAAK,CAACE,OAAO;MAAEV,KAAK,EAAC;QAC7DE,mBAAA,CAA8B,YAAAS,gBAAA,CAAvBH,KAAK,CAACE,OAAO,IAAG,IAAE,iBACzBR,mBAAA,CAUM,OAVNU,UAUM,I,kBATJX,mBAAA,CAQMG,SAAA,QAhBdC,WAAA,CAQ4BG,KAAK,CAACK,KAAK,EAAnBC,IAAI;2BAAhBb,mBAAA,CAQM;QAR4BQ,GAAG,EAAEK,IAAI,CAACC,YAAY;QAAEf,KAAK,EAAC;UAC9DE,mBAAA,CAMS;QALNF,KAAK,EAVlBgB,eAAA,CAUoBC,QAAA,CAAAC,YAAY,CAACJ,IAAI;QACxBK,OAAK,EAAAC,MAAA,IAAEH,QAAA,CAAAI,UAAU,CAACP,IAAI;QACtBQ,QAAQ,EAAER,IAAI,CAACS;SACjB,KACG,GAAAZ,gBAAA,CAAGG,IAAI,CAACU,MAAM,IAAG,IAAE,GAAAb,gBAAA,CAAGG,IAAI,CAACS,UAAU,WAAWT,IAAI,CAACW,KAAK,WAAU,IACxE,+BAfVC,UAAA,E;;kCAoBIvB,mBAAA,cAAiB,EACjBD,mBAAA,CAOM,c,0BANJA,mBAAA,CAAyC;IAAlCyB,GAAG,EAAC;EAAgB,GAAC,OAAK,sB,gBACjCzB,mBAAA,CAIS;IA3Bf,uBAAA0B,MAAA,QAAAA,MAAA,MAAAR,MAAA,IAuBuBd,KAAA,CAAAuB,aAAa,GAAAT,MAAA;IAAEU,EAAE,EAAC;yBACjC7B,mBAAA,CAESG,SAAA,QA1BjBC,WAAA,CAwB8BC,KAAA,CAAAyB,SAAS,EAAhBC,GAAG;yBAAlB/B,mBAAA,CAES;MAFyBQ,GAAG,EAAEuB,GAAG,CAACP,KAAK;MAAGQ,KAAK,EAAED,GAAG,CAACP;wBACzDO,GAAG,CAACE,IAAI,IAAG,QAAM,GAAAvB,gBAAA,CAAGqB,GAAG,CAACP,KAAK,IAAG,IACrC,uBA1BRU,UAAA;2EAuBuB7B,KAAA,CAAAuB,aAAa,E,KAOhC1B,mBAAA,UAAa,EACbD,mBAAA,CAA8C;IAArCiB,OAAK,EAAAS,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEnB,QAAA,CAAAoB,iBAAA,IAAApB,QAAA,CAAAoB,iBAAA,IAAAD,IAAA,CAAiB;KAAE,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}